!function(a){var e={};function t(s){if(e[s])return e[s].exports;var i=e[s]={i:s,l:!1,exports:{}};return a[s].call(i.exports,i,i.exports,t),i.l=!0,i.exports}t.m=a,t.c=e,t.d=function(a,e,s){t.o(a,e)||Object.defineProperty(a,e,{enumerable:!0,get:s})},t.r=function(a){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},t.t=function(a,e){if(1&e&&(a=t(a)),8&e)return a;if(4&e&&"object"==typeof a&&a&&a.__esModule)return a;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:a}),2&e&&"string"!=typeof a)for(var i in a)t.d(s,i,function(e){return a[e]}.bind(null,i));return s},t.n=function(a){var e=a&&a.__esModule?function(){return a.default}:function(){return a};return t.d(e,"a",e),e},t.o=function(a,e){return Object.prototype.hasOwnProperty.call(a,e)},t.p="./",t(t.s=0)}([function(a,e){navigator.userAgent.toLowerCase().indexOf("dingtalk")>-1&&document.writeln('<script src="https://appx/web-view.min.js"><\/script>');var t,s,i,n,o,d,c,r,l,m,p,u,v,g,f,C,h,b,y,_,k,T,x,A,N,S,M,D=[],I=[],w=[],E=[],j=10,P=[],z=[],G=[],K=[],U=[],Y=document.getElementById("picker-btn"),R=document.getElementById("district-btn");function O(a){var e="",t=[];t=a?D:w,$.each(t,function(t,s){s.paramName.length>6?s.paramCode!=A||a?e+='<dd data-paramCode="'+s.paramCode+'" data-paramCode1="'+s.paramCode1+'" data-paramCode2="'+s.paramCode2+'" data-paramName="'+s.paramName+'">'+s.paramName.substring(0,5)+"…</dd>":e+='<dd class="active" data-paramCode="'+s.paramCode+'" data-paramCode1="'+s.paramCode1+'" data-paramCode2="'+s.paramCode2+'" data-paramName="'+s.paramName+'">'+s.paramName.substring(0,5)+"…</dd>":s.paramCode!=A||a?e+='<dd data-paramCode="'+s.paramCode+'" data-paramCode1="'+s.paramCode1+'" data-paramCode2="'+s.paramCode2+'" data-paramName="'+s.paramName+'">'+s.paramName+"</dd>":e+='<dd class="active" data-paramCode="'+s.paramCode+'" data-paramCode1="'+s.paramCode1+'" data-paramCode2="'+s.paramCode2+'" data-paramName="'+s.paramName+'">'+s.paramName+"</dd>"}),$("#Large_TAG").html(e),$(".large_tag_box").css("display","block"),$("#Large_TAG dd").on("click",function(){$(this).siblings().removeClass("active"),$(this).hasClass("active")||$(this).addClass("active");var a=$(this).data("paramcode");N=a,M=$(this).data("paramname"),T="",_="",$(".tagInfo").text(M),dd.postMessage({type:"smallTag",val:a})})}function B(a){var e=[];if((e=a?I:E).length>0){var t="";$.each(e,function(e,s){s.tagName.length>6?s.tagCode!=k||a?t+='<dd data-tagCode="'+s.tagCode+'" data-tagName="'+s.tagName+'">'+s.tagName.substring(0,5)+"…</dd>":t+='<dd class="active" data-tagCode="'+s.tagCode+'" data-tagName="'+s.tagName+'">'+s.tagName.substring(0,5)+"…</dd>":s.tagCode!=k||a?t+='<dd data-tagCode="'+s.tagCode+'" data-tagName="'+s.tagName+'">'+s.tagName+"</dd>":t+='<dd class="active" data-tagCode="'+s.tagCode+'" data-tagName="'+s.tagName+'">'+s.tagName+"</dd>"}),$("#SMALL_TAG").html(t),$(".small_tag_box").css("display","block"),$("#SMALL_TAG dd").on("click",function(){$(this).siblings().removeClass("active"),$(this).hasClass("active")||$(this).addClass("active");var a=$(this).data("tagcode");_=a,T=$(this).data("tagname"),$(".tagInfo").text(M+" - "+T)})}else $("#SMALL_TAG").html(""),$(".small_tag_box").css("display","none")}function J(){v={},$.each(m.DistrictJson,function(a,e){var t=e.name;v[t]=["全部"],e.children&&$.each(e.children,function(a,e){v[t].push(e.name)})})}function Z(){P.forEach(function(a,e){var t;switch(a.checkState){case"1":t=L.marker([a.lat,a.lon],{draggable:!1,opacity:1,icon:L.divIcon({className:"green-marker",html:"<p>"+(e+1)+"</p>"})});break;case"2":t=L.marker([a.lat,a.lon],{draggable:!1,opacity:1,icon:L.divIcon({className:"blue-marker",html:"<p>"+(e+1)+"</p>"})});break;case"3":t=L.marker([a.lat,a.lon],{draggable:!1,opacity:1,icon:L.divIcon({className:"red-marker",html:"<p>"+(e+1)+"</p>"})})}c.addLayer(t),t.on("click",function(a){$(".detail_info").hasClass("active")&&$(".detail_info").removeClass("active"),l=parseInt(a.originalEvent.target.textContent)-1,function(a){var e=encodeURI("https://dh.ditu.zj.cn:9443/inverse/getInverseGeocoding.jsonp?&detail=1&zoom=11&latlon="+a.lon+","+a.lat+"&lat=&lon=&customer=2");$.ajax({url:e,dataType:"jsonp",success:function(e){var t=e.city.value+e.dist.value+e.town.value+e.poi;$(".legalEntity_name").text(a.legalEntityName),$(".legalRep_name").text(a.legalRep),$(".legalRep_tel").text(a.tel),$(".address_info").text(t),$(".distance_info").text((parseInt(a.distance)/1e3).toFixed(2)),$(".call_tel").data("tel",a.tel),r={longitude:a.lon,latitude:a.lat,name:e.poi,address:e.poi},$(".detail_info").addClass("active")},error:function(a){dd.alert({content:"地址解析出错"})}})}(P[l])})})}dd.postMessage({type:"init"}),dd.onMessage=function(a){switch(a.dataType){case"init":a.userId,a.token,a.baseUrl,a.tagAction,n=a.lon&&a.lat?{lon:a.lon,lat:a.lat}:{lon:120.14989,lat:30.27751},a.cityName||"杭州市",P=a.markDatas,m=a.filterDatas,p=a.userLevel,a.showDistrict,t=a.tagLineData,function(){o=L.map("map",{crs:L.CRS.CustomEPSG4326,center:n,minZoom:5,zoom:j,inertiaDeceleration:15e3,zoomControl:!1});var a=new L.GXYZ("https://ditu.zjzwfw.gov.cn/mapserver/vmap/zjvmap/getMAP?x={x}&y={y}&l={z}&styleId=tdt_biaozhunyangshi_2017",{tileSize:512,minZoom:5});o.addLayer(a);var e=new L.GXYZ("https://ditu.zjzwfw.gov.cn/mapserver/label/zjvmap/getImg?x={x}&y={y}&l={z}&styleId=tdt_biaozhunyangshi_2017",{tileSize:512,hitDetection:!0,keepBuffer:0,updateWhenZooming:!1});o.addLayer(e);var i=L.icon({iconUrl:"../img/indoor_pub_poi_pressed.png",iconSize:[21,30],iconAnchor:[10,20]}),d=L.marker([o.getCenter().lat,o.getCenter().lng],{draggable:!1,opacity:1,icon:i});o.addLayer(d),c=L.markerClusterGroup(),Z(),o.addLayer(c),$(".whiteBtn").addClass("active"),$(".check_title").text($(".whiteBtn").data("title")).fadeIn(),function(){var a="",e="",i="",n="";$.each(m.marketType,function(e,t){a+='<dd data-paramCode="'+t.paramCode+'" data-paramCodeType="'+t.paramCodeType+'">'+t.paramName+"</dd>"}),$.each(m.checkType,function(a,t){e+='<dd data-paramCode="'+t.paramCode+'" data-paramCodeType="'+t.paramCodeType+'">'+t.paramName+"</dd>"}),$.each(m.taskStatus,function(a,e){i+='<dd data-paramCode="'+e.paramCode+'" data-paramCodeType="'+e.paramCodeType+'">'+e.paramName+"</dd>"}),$.each(t,function(a,e){n+='<dd data-dutyDeptCode="'+e.dutyDeptCode+'">'+e.dutyDeptName+"</dd>"}),$("#MARKET_TYPE").html(a),$("#TASK_TYPE").html(e),$("#TASK_STATUS").html(i),$("#SUP_TAG_LINE").html(n),$(".filter_list dd").on("click",function(a){$(this).siblings().removeClass("active"),$(this).hasClass("active")||$(this).addClass("active");var e=$(a.target)[0].dataset.paramcodetype;switch(e){case"MARKET_TYPE":C=$(a.target)[0].dataset.paramcode;break;case"TASK_TYPE":b=$(a.target)[0].dataset.paramcode;break;case"TASK_STATUS":g=$(a.target)[0].dataset.paramcode}}),$("#SUP_TAG_LINE dd").on("click",function(){s=$(this).data("dutydeptcode"),dutyDeptCodeName=$(this).text(),$(this).siblings().removeClass("active"),$(this).hasClass("active")||$(this).addClass("active"),_="",T="",N="",M="",$(".large_tag_box").css("display","none"),$(".small_tag_box").css("display","none"),$(".tagInfo").text(dutyDeptCodeName),$(".tagInfo-box").css("display","block"),dd.postMessage({type:"superTag",val:s})})}(),p?(Y.style.display="inline-block",u={},$.each(m.SlicenoLDNameJson,function(a,e){var t=e.name;u[t]=[],e.children&&$.each(e.children,function(a,e){u[t].push(e.name)})})):(R.style.display="inline-block",J());o.on("click",function(a){$(".detail_info").hasClass("active")&&$(".detail_info").removeClass("active")})}();break;case"updateMarks":P=a.markDatas,c.clearLayers(),o.setView([Number(n.lat),Number(n.lon)],j),Z();break;case"showDistrict":a.showDistrict&&(m=a.filterDatas,R.style.display="inline-block",J());break;case"queryLargeTag":D=a.largeTagData,O(!0);break;case"querySmallTag":I=a.smallTagData,B(!0)}},$(".filterBtn").on("click",function(){$(".custom-mask").addClass("custom-mask--visible"),$(".custom-container").addClass("custom-container--visible"),$(".custom-container li").addClass("active")}),$(".custom-mask").on("click",function(){$(".custom-mask").removeClass("custom-mask--visible"),$(".floating_box").hasClass("active")?($(".floating_box").removeClass("active"),$(".filter_list_box").removeClass("active")):($(".custom-container").removeClass("custom-container--visible"),$(".custom-container li").removeClass("active"))}),$(".custom-container").on("click",function(a){$(".custom-mask").removeClass("custom-mask--visible"),$(".custom-container").removeClass("custom-container--visible"),$(".custom-container li").removeClass("active");var e=$(a.target).data("metter");""==e?$(".filterBtn span").html('不限<i class="icon-arrow"></i>'):$(".filterBtn span").html(e+'<i class="icon-arrow"></i>'),dd.postMessage({type:"distance",val:e})}),$(".floating_box").on("click",function(a){if($(this).addClass("active"),$(".custom-mask").addClass("custom-mask--visible"),$(".filter_list_box").addClass("active"),f){$("#TASK_STATUS dd").removeClass("active");var e=jQuery.makeArray($("#TASK_STATUS dd"));$.each(e,function(a,e){if(e.dataset.paramcode==g)return $(e).addClass("active"),!0})}else $("#TASK_STATUS dd").removeClass("active");if(G.length>0||U.length>0?p?($("#picker-btn").text(z.join("-")),$("#picker-btn").addClass("active"),K&&($("#district-btn").text(K.join("-")),$("#district-btn").addClass("active"))):($("#district-btn").text(K.join("-")),$("#district-btn").addClass("active")):p?($("#picker-btn").text("市|区|县"),$("#picker-btn").removeClass("active"),$("#district-btn").text("商圈/片区"),$("#district-btn").removeClass("active"),$("#district-btn").css("display","none")):($("#district-btn").text("商圈/片区"),$("#district-btn").removeClass("active")),$(".tagInfo-box").css("display","none"),$(".large_tag_box").css("display","none"),$(".small_tag_box").css("display","none"),$("#SUP_TAG_LINE dd").removeClass("active"),A){e=jQuery.makeArray($("#SUP_TAG_LINE dd"));$.each(e,function(a,e){if(e.dataset.dutydeptcode==i)return $(e).addClass("active"),!0}),O(!1),B(!1),k?$(".tagInfo").text(S+" - "+x):$(".tagInfo").text(S),$(".tagInfo-box").css("display","block")}else $(".tagInfo").text(""),$("#Large_TAG").html(""),$("#SMALL_TAG").html("");if(h){$("#MARKET_TYPE dd").removeClass("active");e=jQuery.makeArray($("#MARKET_TYPE dd"));$.each(e,function(a,e){if(e.dataset.paramcode==C)return $(e).addClass("active"),!0})}else $("#MARKET_TYPE dd").removeClass("active");if(y){$("#TASK_TYPE dd").removeClass("active");e=jQuery.makeArray($("#TASK_TYPE dd"));$.each(e,function(a,e){if(e.dataset.paramcode==b)return $(e).addClass("active"),!0})}else $("#TASK_TYPE dd").removeClass("active")}),$(".custom-mask").on("touchmove",function(a){a.preventDefault()}),$(".custom-container").on("touchmove",function(a){a.preventDefault()}),$(".iptSearch").on("keydown",function(a){13==a.keyCode&&dd.postMessage({type:"keyword",val:a.target.value||""})}),$(".btn_handler_box li").on("click",function(a){var e=$(a.target).data("filter"),t=$(a.target).data("title");return $(this).closest("li").addClass("active").siblings().removeClass("active"),""==e||"1"==e||"2"==e||"3"==e?($(".check_title").text(t).fadeIn(),void dd.postMessage({type:"checkState",val:e})):"reset"==e?($(".check_title").fadeOut(),c.clearLayers(),o.setView([Number(n.lat),Number(n.lon)],j),d=L.circle([o.getCenter().lat,o.getCenter().lng],{radius:30}),void o.addLayer(d)):void 0}),$(".call_tel").on("click",function(){var a=$(".call_tel").data("tel");dd.postMessage({type:"callPhone",val:a})}),$(".menu_icon_3").on("click",function(){dd.postMessage({type:"openMap",val:r})}),$(".detail").on("click",function(){dd.postMessage({type:"detail",val:l})}),$(".gocheck").on("click",function(){dd.postMessage({type:"gocheck",val:l})}),$(".unfind").on("click",function(){dd.postMessage({type:"unfind",val:l})}),$(".reset_btn").on("click",function(){[],K=[],U=[],z=[],G=[],$("#picker-btn").text("市|区|县"),$("#district-btn").text("商圈/片区"),p?($("#picker-btn").removeClass("active"),$("#district-btn").removeClass("active"),$("#district-btn").css("display","none")):$("#district-btn").removeClass("active"),$(".filter_type dd").removeClass("active"),$(".custom-mask").removeClass("custom-mask--visible"),$(".floating_box").removeClass("active"),$(".filter_list_box").removeClass("active"),f="",h="",y="","",_="",N="",T="",M="",s="",x="",S="",k="",A="",w=[],E=[],i="";dd.postMessage({type:"businessDistrict",val:{taskStatus:"",businessDistrict:"",legalEntityCata:"",checkType:"",localAdm:"",curMinTagCode:"",curMaxTagCode:""}})}),$(".confirm_btn").on("click",function(){f=g||"",h=C||"",y=b||"",k=_||"",A=N||"",x=T||"",S=M||"",w=D||[],E=I||[],i=A?s:"";var a={taskStatus:f,legalEntityCata:h,checkType:y,curMinTagCode:k,curMaxTagCode:A};1==G.length?(a.localAdm=G[0],a.businessDistrict=""):0==U.length?(a.localAdm=G[0],a.businessDistrict=""):(a.localAdm=U[0],a.businessDistrict=U[1]||""),$(".custom-mask").removeClass("custom-mask--visible"),$(".floating_box").removeClass("active"),$(".filter_list_box").removeClass("active"),dd.postMessage({type:"businessDistrict",val:a})}),Y.onclick=function(){new PickerView({bindElem:Y,data:u,title:"市|区|县",leftText:"取消",rightText:"确定",rightFn:function(a){var e;z=[],G=[];var t=m.SlicenoLDNameJson.findIndex(function(e){return e.name==a[0]});G.push(m.SlicenoLDNameJson[t].code),z=a;var s=(e=m.SlicenoLDNameJson[t].children).findIndex(function(e){return e.name==a[1]});G.push(e[s].code),Y.innerText=z.join("-"),Y.setAttribute("class","active"),R.innerText="商圈/片区",R.style.display="none",R.setAttribute("class",""),K=[],U=[],dd.postMessage({type:"showDistrict",val:{localAdm:G[G.length-1],selAll:!1}})}})},R.onclick=function(){new PickerView({bindElem:R,data:v,title:"商圈/片区",leftText:"取消",rightText:"确定",rightFn:function(a){var e;K=[],U=[];var t=m.DistrictJson.findIndex(function(e){return e.name==a[0]});if(U.push(m.DistrictJson[t].code),"全部"!=a[1]){K=a;var s=(e=m.DistrictJson[t].children).findIndex(function(e){return e.name==a[1]});U.push(e[s].code)}else K.push(a[0]);R.innerText=K.join("-"),R.setAttribute("class","active")}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vanMvY2hlY2ttYXAuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ0b0xvd2VyQ2FzZSIsImluZGV4T2YiLCJkb2N1bWVudCIsIndyaXRlbG4iLCJ0YWdMaW5lRGF0YSIsImR1dHlEZXB0Q29kZSIsImN1ckR1dHlEZXB0Q29kZSIsImluaXRMYXRsbmciLCJtYXAiLCJjaXJjbGUiLCJtYXJrZXJzIiwibWFwUGFyYW1zIiwiaWR4IiwiZmlsdGVyRGF0YXMiLCJ1c2VyTGV2ZWwiLCJwaWNrZXJPcHQiLCJkaXN0UGlja2VyT3B0IiwidGFza1N0YXR1cyIsImN1clRhc2tTdGF0dXMiLCJsZWdhbEVudGl0eUNhdGEiLCJjdXJMZWdhbEVudGl0eUNhdGEiLCJjaGVja1R5cGUiLCJjdXJDaGVja1R5cGUiLCJtaW5UYWdDb2RlIiwiY3VyTWluVGFnQ29kZSIsIm1pblRhZ05hbWUiLCJjdXJNaW5UYWdOYW1lIiwiY3VyTWF4VGFnQ29kZSIsIm1heFRhZ0NvZGUiLCJjdXJNYXhUYWdOYW1lIiwibWF4VGFnTmFtZSIsImxhcmdlVGFnRGF0YSIsInNtYWxsVGFnRGF0YSIsImN1ckxhcmdlVGFnRGF0YSIsImN1clNtYWxsVGFnRGF0YSIsImluaXRab29tIiwibWFya0RhdGFzIiwiY2l0eU5hbWUiLCJjaXR5Q29kZSIsImRpc3ROYW1lIiwiZGlzdENvZGUiLCJidG4iLCJnZXRFbGVtZW50QnlJZCIsImRpc3RCdG4iLCJyZW5kZXJMYXJnZVRhZyIsImZsYWciLCJsYXJnZVRhZ0h0bWwiLCJsYXJnZURhdGEiLCIkIiwiZWFjaCIsImluZGV4IiwidmFsIiwicGFyYW1OYW1lIiwibGVuZ3RoIiwicGFyYW1Db2RlIiwicGFyYW1Db2RlMSIsInBhcmFtQ29kZTIiLCJzdWJzdHJpbmciLCJodG1sIiwiY3NzIiwib24iLCJ0aGlzIiwic2libGluZ3MiLCJyZW1vdmVDbGFzcyIsImhhc0NsYXNzIiwiYWRkQ2xhc3MiLCJkYXRhIiwidGV4dCIsImRkIiwicG9zdE1lc3NhZ2UiLCJ0eXBlIiwicmVuZGVyU21hbGxUYWciLCJzbWFsbERhdGEiLCJzbWFsbFRhZ0h0bWwiLCJ0YWdOYW1lIiwidGFnQ29kZSIsImdldERpc3RQaWNrZXJPcHQiLCJEaXN0cmljdEpzb24iLCJpZHhLZXkiLCJjaGlsZHJlbiIsInB1c2giLCJkcmF3TWFyZWtlcnMiLCJmb3JFYWNoIiwibWFya2VyIiwiY2hlY2tTdGF0ZSIsIkwiLCJsYXQiLCJsb24iLCJkcmFnZ2FibGUiLCJvcGFjaXR5IiwiaWNvbiIsImRpdkljb24iLCJjbGFzc05hbWUiLCJhZGRMYXllciIsImUiLCJwYXJzZUludCIsIm9yaWdpbmFsRXZlbnQiLCJ0YXJnZXQiLCJ0ZXh0Q29udGVudCIsInJldmVyc2VSZXNvbHV0aW9uVXJsIiwiZW5jb2RlVVJJIiwiYWpheCIsInVybCIsImRhdGFUeXBlIiwic3VjY2VzcyIsInJlcyIsImxvY2F0aW9uIiwiY2l0eSIsImRpc3QiLCJ0b3duIiwicG9pIiwibGVnYWxFbnRpdHlOYW1lIiwibGVnYWxSZXAiLCJ0ZWwiLCJkaXN0YW5jZSIsInRvRml4ZWQiLCJsb25naXR1ZGUiLCJsYXRpdHVkZSIsImFkZHJlc3MiLCJlcnJvciIsImVyciIsImFsZXJ0IiwiY29udGVudCIsImdldEFkcmVzc0luZm8iLCJvbk1lc3NhZ2UiLCJ1c2VySWQiLCJ0b2tlbiIsImJhc2VVcmwiLCJ0YWdBY3Rpb24iLCJzaG93RGlzdHJpY3QiLCJjcnMiLCJDUlMiLCJDdXN0b21FUFNHNDMyNiIsImNlbnRlciIsIm1pblpvb20iLCJ6b29tIiwiaW5lcnRpYURlY2VsZXJhdGlvbiIsInpvb21Db250cm9sIiwibGF5ZXIiLCJHWFlaIiwidGlsZVNpemUiLCJsYWJlbExheWVyIiwiaGl0RGV0ZWN0aW9uIiwia2VlcEJ1ZmZlciIsInVwZGF0ZVdoZW5ab29taW5nIiwiY3VzdG9tSWNvbiIsImljb25VcmwiLCJpY29uU2l6ZSIsImljb25BbmNob3IiLCJjdXJNYXJrZXIiLCJnZXRDZW50ZXIiLCJsbmciLCJtYXJrZXJDbHVzdGVyR3JvdXAiLCJmYWRlSW4iLCJtYXJrZXRIdG1sIiwidHlwZUh0bWwiLCJzdGF0dXNIdG1sIiwidGFnSHRtbCIsIm1hcmtldFR5cGUiLCJwYXJhbUNvZGVUeXBlIiwiZHV0eURlcHROYW1lIiwiZXYiLCJkYXRhc2V0IiwicGFyYW1jb2RldHlwZSIsInBhcmFtY29kZSIsImR1dHlEZXB0Q29kZU5hbWUiLCJpbml0RmlsdGVySHRtbCIsInN0eWxlIiwiZGlzcGxheSIsIlNsaWNlbm9MRE5hbWVKc29uIiwiaW5pdCIsImNsZWFyTGF5ZXJzIiwic2V0VmlldyIsIk51bWJlciIsIm1ldHRlciIsImFyciIsImpRdWVyeSIsIm1ha2VBcnJheSIsImpvaW4iLCJkdXR5ZGVwdGNvZGUiLCJwcmV2ZW50RGVmYXVsdCIsImtleUNvZGUiLCJmaWx0ZXIiLCJ0aXRsZSIsImNsb3Nlc3QiLCJmYWRlT3V0IiwicmFkaXVzIiwicGhvbmVOdW0iLCJidXNpbmVzc0Rpc3RyaWN0IiwibG9jYWxBZG0iLCJwcmVGaWx0ZXJEYXRhIiwib25jbGljayIsIlBpY2tlclZpZXciLCJiaW5kRWxlbSIsImxlZnRUZXh0IiwicmlnaHRUZXh0IiwicmlnaHRGbiIsInNlbGVjdEFyciIsInN1YlNsaWNlbm9MRE5hbWVKc29uIiwiZmlyc3RJZHgiLCJmaW5kSW5kZXgiLCJvYmoiLCJjb2RlIiwic3ViSWR4IiwiaW5uZXJUZXh0Iiwic2V0QXR0cmlidXRlIiwic2VsQWxsIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxLQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLElBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsWUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsR0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLGFBQXdEQyxNQUFBLFdBRXhEUCxPQUFBQyxlQUFBYixFQUFBLGNBQWlEbUIsT0FBQSxLQVFqRHJCLEVBQUFzQixFQUFBLFNBQUFELEVBQUFFLEdBRUEsR0FEQSxFQUFBQSxJQUFBRixFQUFBckIsRUFBQXFCLElBQ0EsRUFBQUUsRUFBQSxPQUFBRixFQUNBLEtBQUFFLEdBQUEsaUJBQUFGLFFBQUFHLFdBQUEsT0FBQUgsRUFDQSxJQUFBSSxFQUFBWCxPQUFBWSxPQUFBLE1BR0EsR0FGQTFCLEVBQUFrQixFQUFBTyxHQUNBWCxPQUFBQyxlQUFBVSxFQUFBLFdBQXlDVCxZQUFBLEVBQUFLLFVBQ3pDLEVBQUFFLEdBQUEsaUJBQUFGLEVBQUEsUUFBQU0sS0FBQU4sRUFBQXJCLEVBQUFVLEVBQUFlLEVBQUFFLEVBQUEsU0FBQUEsR0FBZ0gsT0FBQU4sRUFB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RUEsSUFBQU0sR0FEQUwsRUFBQXpMLEVBQUFnRSxhQUFBMEgsR0FBQXhILFVBQ0F5SCxVQUFBLFNBQUFySixHQUFrRixPQUFBQSxFQUFBOUUsTUFBQWdPLEVBQUEsS0FDbEY3SixFQUFBd0MsS0FBQXNILEVBQUFLLEdBQUFELFdBRUFuSyxFQUFBeUMsS0FBQXFILEVBQUEsSUFPQTFKLEVBQUFpSyxVQUFBckssRUFBQTJJLEtBQUEsS0FDQXZJLEVBQUFrSyxhQUFBIiwiZmlsZSI6ImpzL2NoZWNrbWFwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCIuL1wiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG4iLCJcclxuICAgICAgICBpZiAobmF2aWdhdG9yLnVzZXJBZ2VudC50b0xvd2VyQ2FzZSgpLmluZGV4T2YoJ2Rpbmd0YWxrJykgPiAtMSkge1xyXG4gICAgICAgICAgICBkb2N1bWVudC53cml0ZWxuKCc8c2NyaXB0IHNyYz1cImh0dHBzOi8vYXBweC93ZWItdmlldy5taW4uanNcIicgKyAnPicgKyAnPCcgKyAnLycgKyAnc2NyaXB0PicpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB2YXIgdXNlcklkLCB0b2tlbiwgYmFzZVVybCwgdGFnQWN0aW9uLCBkYXRhVHlwZSwgdGFnTGluZURhdGEsIGxhcmdlVGFnRGF0YSA9IFtdLCBzbWFsbFRhZ0RhdGEgPSBbXSwgY3VyTGFyZ2VUYWdEYXRhID0gW10sIGN1clNtYWxsVGFnRGF0YSA9IFtdLFxyXG4gICAgICAgIGR1dHlEZXB0Q29kZSwgY3VyRHV0eURlcHRDb2RlO1xyXG4gICAgICAgIHZhciBpbml0TGF0bG5nLCBpbml0Wm9vbSA9IDEwLCBjaXR5TmFtZXMsIG5ld0NlbnRlckRhdGEsICBtYXJrRGF0YXMgPSBbXSxcclxuICAgICAgICBtYXAsIGN1ck1hcmtlciwgY2lyY2xlLCBtYXJrZXJzLCBtYXBQYXJhbXMsIGlkeCwgZmlsdGVyRGF0YXMsIHVzZXJMZXZlbCwgc2hvd0Rpc3RyaWN0LCBwaWNrZXJPcHQsIGRpc3RQaWNrZXJPcHQ7XHJcbiAgICAgICAgdmFyIHRhc2tTdGF0dXMsIGN1clRhc2tTdGF0dXMsIGxlZ2FsRW50aXR5Q2F0YSwgY3VyTGVnYWxFbnRpdHlDYXRhLCBjaGVja1R5cGUsIGN1ckNoZWNrVHlwZSwgXHJcbiAgICAgICAgbGVnYWxFbnRpdHlUYWcsIGxlZ2FsRW50aXR5VGFnMSwgbGVnYWxFbnRpdHlUYWcyLCBjdXJMZWdhbEVudGl0eVRhZywgY3VyTGVnYWxFbnRpdHlUYWcxLCBjdXJMZWdhbEVudGl0eVRhZzIsXHJcbiAgICAgICAgY2l0eU5hbWUgPSBbXSwgY2l0eUNvZGUgPSBbXSwgZGlzdE5hbWUgPSBbXSwgZGlzdENvZGUgPSBbXSwgYXJlYU5hbWUgPSBbXSwgYXJlYUNvZGUgPSBbXSwgY3VycmVudEFyZWFDb2RlOyBcclxuICAgICAgICB2YXIgdGFnUGlja2VyT3B0LCBwcmVUYWdNaW5PcHQsIG1pblRhZ0NvZGUsIGN1ck1pblRhZ0NvZGUsIG1pblRhZ05hbWUsIGN1ck1pblRhZ05hbWUsIGN1ck1heFRhZ0NvZGUsIG1heFRhZ0NvZGUsIGN1ck1heFRhZ05hbWUsIG1heFRhZ05hbWU7ICAvLyDnm5HnrqHmoIfnrb4tcGlja2VyLmRhdGFcclxuICAgICAgICB2YXIgYnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwaWNrZXItYnRuXCIpO1xyXG4gICAgICAgIHZhciBkaXN0QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkaXN0cmljdC1idG5cIik7XHJcbiAgICAgICAgLy8gdmFyIHRhZ0J0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFnLWJ0blwiKTtcclxuICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ2luaXQnfSk7XHJcbiAgICAgICAgZGQub25NZXNzYWdlID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICBzd2l0Y2goZS5kYXRhVHlwZSl7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwiaW5pdFwiOlxyXG4gICAgICAgICAgICAgICAgICAgIHVzZXJJZCA9IGUudXNlcklkO1xyXG4gICAgICAgICAgICAgICAgICAgIHRva2VuID0gZS50b2tlbjtcclxuICAgICAgICAgICAgICAgICAgICBiYXNlVXJsID0gZS5iYXNlVXJsO1xyXG4gICAgICAgICAgICAgICAgICAgIHRhZ0FjdGlvbiA9IGUudGFnQWN0aW9uO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlLmxvbiAmJiBlLmxhdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpbml0TGF0bG5nID0ge2xvbjogZS5sb24sIGxhdDogZS5sYXR9XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaW5pdExhdGxuZyA9IHtsb246IDEyMC4xNDk4OSwgbGF0OiAzMC4yNzc1MX07ICAvLyDpu5jorqTnu4/nuqzluqbkuLrok53lpKnllYbliqHkuK3lv4NcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgY2l0eU5hbWVzID0gZS5jaXR5TmFtZSB8fCBcIuadreW3nuW4glwiO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcmtEYXRhcyA9IGUubWFya0RhdGFzO1xyXG4gICAgICAgICAgICAgICAgICAgIGZpbHRlckRhdGFzID0gZS5maWx0ZXJEYXRhcztcclxuICAgICAgICAgICAgICAgICAgICB1c2VyTGV2ZWwgPSBlLnVzZXJMZXZlbDtcclxuICAgICAgICAgICAgICAgICAgICBzaG93RGlzdHJpY3QgPSBlLnNob3dEaXN0cmljdDtcclxuICAgICAgICAgICAgICAgICAgICB0YWdMaW5lRGF0YSA9IGUudGFnTGluZURhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgaW5pdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcInVwZGF0ZU1hcmtzXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgbWFya0RhdGFzID0gZS5tYXJrRGF0YXM7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVkdWN0aW9uTWFwKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgZHJhd01hcmVrZXJzKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFwic2hvd0Rpc3RyaWN0XCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc2hvd0Rpc3RyaWN0ID0gZS5zaG93RGlzdHJpY3Q7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNob3dEaXN0cmljdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWx0ZXJEYXRhcyA9IGUuZmlsdGVyRGF0YXM7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3RCdG4uc3R5bGUuZGlzcGxheSA9ICAnaW5saW5lLWJsb2NrJztcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2V0RGlzdFBpY2tlck9wdCgpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBcInF1ZXJ5TGFyZ2VUYWdcIjpcclxuICAgICAgICAgICAgICAgICAgICBsYXJnZVRhZ0RhdGEgPSBlLmxhcmdlVGFnRGF0YTtcclxuICAgICAgICAgICAgICAgICAgICByZW5kZXJMYXJnZVRhZyh0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJxdWVyeVNtYWxsVGFnXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgc21hbGxUYWdEYXRhID0gZS5zbWFsbFRhZ0RhdGE7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVuZGVyU21hbGxUYWcodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGluaXQoKSB7XHJcbiAgICAgICAgICAgIG1hcCA9IEwubWFwKCdtYXAnLHtjcnM6TC5DUlMuQ3VzdG9tRVBTRzQzMjYsY2VudGVyOiBpbml0TGF0bG5nLCBtaW5ab29tOiA1LCB6b29tOiBpbml0Wm9vbSwgaW5lcnRpYURlY2VsZXJhdGlvbjoxNTAwMCwgem9vbUNvbnRyb2w6IGZhbHNlfSk7XHJcbiAgICAgICAgICAgIHZhciB0aWxlQWRkcmVzcyA9ICdodHRwczovL2RpdHUuemp6d2Z3Lmdvdi5jbi9tYXBzZXJ2ZXIvdm1hcC96anZtYXAvZ2V0TUFQP3g9e3h9Jnk9e3l9Jmw9e3p9JnN0eWxlSWQ9dGR0X2JpYW96aHVueWFuZ3NoaV8yMDE3JztcclxuXHJcbiAgICAgICAgICAgIHZhciBsYXllciA9IG5ldyBMLkdYWVoodGlsZUFkZHJlc3MsIHt0aWxlU2l6ZTo1MTIsIG1pblpvb206IDV9KTtcclxuICAgICAgICAgICAgbWFwLmFkZExheWVyKGxheWVyKTtcclxuXHJcbiAgICAgICAgICAgIC8vIOa3u+WKoOazqOiusOWbvuWxglxyXG4gICAgICAgICAgICAvLyB2YXIgbGFiZWxMYXllciA9IG5ldyBMLkdXVlRBbm5vKHt0aWxlU2l6ZTo1MTJ9KTtcclxuICAgICAgICAgICAgLy8gdmFyIGRhdGFTb3VyY2UgPSBuZXcgQ3VzdG9tLlVSTERhdGFTb3VyY2UoKTtcclxuICAgICAgICAgICAgLy8gZGF0YVNvdXJjZS51cmwgPSAnaHR0cHM6Ly9kaXR1Lnpqendmdy5nb3YuY24vbWFwc2VydmVyL2xhYmVsL3pqdm1hcC9nZXREYXRhcz94PSR7eH0meT0ke3l9Jmw9JHt6fSZzdHlsZUlkPXRkdF9iaWFvemh1bnlhbmdzaGlfMjAxNyc7XHJcbiAgICAgICAgICAgIC8vIGxhYmVsTGF5ZXIuYWRkRGF0YVNvdXJjZShkYXRhU291cmNlKTtcclxuICAgICAgICAgICAgLy8gbWFwLmFkZExheWVyKGxhYmVsTGF5ZXIpO1xyXG4gICAgICAgICAgICB2YXIgbGFiZWxMYXllciA9IG5ldyBMLkdYWVooJ2h0dHBzOi8vZGl0dS56anp3ZncuZ292LmNuL21hcHNlcnZlci9sYWJlbC96anZtYXAvZ2V0SW1nP3g9e3h9Jnk9e3l9Jmw9e3p9JnN0eWxlSWQ9dGR0X2JpYW96aHVueWFuZ3NoaV8yMDE3Jyx7dGlsZVNpemU6NTEyLGhpdERldGVjdGlvbjp0cnVlLGtlZXBCdWZmZXI6MCx1cGRhdGVXaGVuWm9vbWluZzpmYWxzZX0pO1xyXG4gICAgICAgICAgICBtYXAuYWRkTGF5ZXIobGFiZWxMYXllcik7XHJcbiAgICAgICAgICAgIHZhciBjdXN0b21JY29uID0gTC5pY29uKHsgXHJcbiAgICAgICAgICAgICAgICBpY29uVXJsOiAnLi4vaW1nL2luZG9vcl9wdWJfcG9pX3ByZXNzZWQucG5nJyxcclxuICAgICAgICAgICAgICAgIGljb25TaXplOiBbMjEsIDMwXSxcclxuICAgICAgICAgICAgICAgIGljb25BbmNob3I6ICAgWzEwLCAyMF0sXHJcbiAgICAgICAgICAgIH0pOyBcclxuICAgICAgICAgICAgdmFyIGN1ck1hcmtlciA9IEwubWFya2VyKCBcclxuICAgICAgICAgICAgICAgIFttYXAuZ2V0Q2VudGVyKCkubGF0LCBtYXAuZ2V0Q2VudGVyKCkubG5nXSwgXHJcbiAgICAgICAgICAgICAgICB7IFxyXG4gICAgICAgICAgICAgICAgICAgIGRyYWdnYWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMSxcclxuICAgICAgICAgICAgICAgICAgICBpY29uOiBjdXN0b21JY29uXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIG1hcC5hZGRMYXllcihjdXJNYXJrZXIpO1xyXG5cclxuICAgICAgICAgICAgbWFya2VycyA9IEwubWFya2VyQ2x1c3Rlckdyb3VwKCk7XHJcbiAgICAgICAgICAgIGRyYXdNYXJla2VycygpO1xyXG4gICAgICAgICAgICBtYXAuYWRkTGF5ZXIobWFya2Vycyk7XHJcblxyXG4gICAgICAgICAgICAkKCcud2hpdGVCdG4nKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQoJy5jaGVja190aXRsZScpLnRleHQoJCgnLndoaXRlQnRuJykuZGF0YSgndGl0bGUnKSkuZmFkZUluKCk7XHJcbiAgICAgICAgICAgIGluaXRGaWx0ZXJIdG1sKCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBpZiAodXNlckxldmVsKSB7XHJcbiAgICAgICAgICAgICAgICBidG4uc3R5bGUuZGlzcGxheSA9ICdpbmxpbmUtYmxvY2snO1xyXG4gICAgICAgICAgICAgICAgZ2V0UGlja2VyT3B0KCk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBkaXN0QnRuLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcclxuICAgICAgICAgICAgICAgIGdldERpc3RQaWNrZXJPcHQoKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgLy8gZ2V0VGFnUGlja2VyT3B0KCk7XHJcblxyXG4gICAgICAgICAgICBtYXAub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgIGlmKCQoXCIuZGV0YWlsX2luZm9cIikuaGFzQ2xhc3MoJ2FjdGl2ZScpKSB7IFxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuZGV0YWlsX2luZm9cIikucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gcmVuZGVyTGFyZ2VUYWcoZmxhZykge1xyXG4gICAgICAgICAgICB2YXIgbGFyZ2VUYWdIdG1sID0gJyc7XHJcbiAgICAgICAgICAgIHZhciBsYXJnZURhdGEgPSBbXTtcclxuICAgICAgICAgICAgaWYgKGZsYWcpIHtcclxuICAgICAgICAgICAgICAgIGxhcmdlRGF0YSA9IGxhcmdlVGFnRGF0YTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGxhcmdlRGF0YSA9IGN1ckxhcmdlVGFnRGF0YTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAkLmVhY2gobGFyZ2VEYXRhLCBmdW5jdGlvbiAoaW5kZXgsIHZhbCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHZhbC5wYXJhbU5hbWUubGVuZ3RoID4gNikge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWwucGFyYW1Db2RlID09IGN1ck1heFRhZ0NvZGUgJiYgIWZsYWcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGFyZ2VUYWdIdG1sICs9ICc8ZGQgY2xhc3M9XCJhY3RpdmVcIiBkYXRhLXBhcmFtQ29kZT1cIicgKyB2YWwucGFyYW1Db2RlICsgJ1wiIGRhdGEtcGFyYW1Db2RlMT1cIicgKyB2YWwucGFyYW1Db2RlMVxyXG4gICAgICAgICAgICAgICAgICAgICAgICArICdcIiBkYXRhLXBhcmFtQ29kZTI9XCInICsgdmFsLnBhcmFtQ29kZTIgKyAnXCIgZGF0YS1wYXJhbU5hbWU9XCInICsgdmFsLnBhcmFtTmFtZSArICdcIj4nICsgdmFsLnBhcmFtTmFtZS5zdWJzdHJpbmcoMCwgNSkgKyAn4oCmJyArICc8L2RkPic7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGFyZ2VUYWdIdG1sICs9ICc8ZGQgZGF0YS1wYXJhbUNvZGU9XCInICsgdmFsLnBhcmFtQ29kZSArICdcIiBkYXRhLXBhcmFtQ29kZTE9XCInICsgdmFsLnBhcmFtQ29kZTFcclxuICAgICAgICAgICAgICAgICAgICAgICAgKyAnXCIgZGF0YS1wYXJhbUNvZGUyPVwiJyArIHZhbC5wYXJhbUNvZGUyICsgJ1wiIGRhdGEtcGFyYW1OYW1lPVwiJyArIHZhbC5wYXJhbU5hbWUgKyAnXCI+JyArIHZhbC5wYXJhbU5hbWUuc3Vic3RyaW5nKDAsIDUpICsgJ+KApicgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbC5wYXJhbUNvZGUgPT0gY3VyTWF4VGFnQ29kZSAmJiAhZmxhZykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYXJnZVRhZ0h0bWwgKz0gJzxkZCBjbGFzcz1cImFjdGl2ZVwiIGRhdGEtcGFyYW1Db2RlPVwiJyArIHZhbC5wYXJhbUNvZGUgKyAnXCIgZGF0YS1wYXJhbUNvZGUxPVwiJyArIHZhbC5wYXJhbUNvZGUxXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICsgJ1wiIGRhdGEtcGFyYW1Db2RlMj1cIicgKyB2YWwucGFyYW1Db2RlMiArICdcIiBkYXRhLXBhcmFtTmFtZT1cIicgKyB2YWwucGFyYW1OYW1lICsgJ1wiPicgKyB2YWwucGFyYW1OYW1lICsgJzwvZGQ+JztcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsYXJnZVRhZ0h0bWwgKz0gJzxkZCBkYXRhLXBhcmFtQ29kZT1cIicgKyB2YWwucGFyYW1Db2RlICsgJ1wiIGRhdGEtcGFyYW1Db2RlMT1cIicgKyB2YWwucGFyYW1Db2RlMVxyXG4gICAgICAgICAgICAgICAgICAgICsgJ1wiIGRhdGEtcGFyYW1Db2RlMj1cIicgKyB2YWwucGFyYW1Db2RlMiArICdcIiBkYXRhLXBhcmFtTmFtZT1cIicgKyB2YWwucGFyYW1OYW1lICsgJ1wiPicgKyB2YWwucGFyYW1OYW1lICsgJzwvZGQ+JztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAkKCcjTGFyZ2VfVEFHJykuaHRtbChsYXJnZVRhZ0h0bWwpO1xyXG4gICAgICAgICAgICAkKCcubGFyZ2VfdGFnX2JveCcpLmNzcygnZGlzcGxheScsICdibG9jaycpO1xyXG5cclxuICAgICAgICAgICAgJChcIiNMYXJnZV9UQUcgZGRcIikub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIGlmICghJCh0aGlzKS5oYXNDbGFzcygnYWN0aXZlJykpIHtcclxuICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZhciBkYXRhID0gJCh0aGlzKS5kYXRhKCdwYXJhbWNvZGUnKTtcclxuICAgICAgICAgICAgICAgIG1heFRhZ0NvZGUgPSBkYXRhO1xyXG4gICAgICAgICAgICAgICAgbWF4VGFnTmFtZSA9ICQodGhpcykuZGF0YSgncGFyYW1uYW1lJyk7XHJcbiAgICAgICAgICAgICAgICBtaW5UYWdOYW1lID0gJyc7XHJcbiAgICAgICAgICAgICAgICBtaW5UYWdDb2RlID0gJyc7XHJcbiAgICAgICAgICAgICAgICAkKCcudGFnSW5mbycpLnRleHQobWF4VGFnTmFtZSk7XHJcbiAgICAgICAgICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ3NtYWxsVGFnJywgdmFsOiBkYXRhfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gcmVuZGVyU21hbGxUYWcoZmxhZykge1xyXG4gICAgICAgICAgICB2YXIgc21hbGxEYXRhID0gW107XHJcbiAgICAgICAgICAgIGlmIChmbGFnKSB7XHJcbiAgICAgICAgICAgICAgICBzbWFsbERhdGEgPSBzbWFsbFRhZ0RhdGE7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBzbWFsbERhdGEgPSBjdXJTbWFsbFRhZ0RhdGFcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoc21hbGxEYXRhLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIHZhciBzbWFsbFRhZ0h0bWwgPSAnJztcclxuICAgICAgICAgICAgICAgICQuZWFjaChzbWFsbERhdGEsIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbC50YWdOYW1lLmxlbmd0aCA+IDYpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbC50YWdDb2RlID09IGN1ck1pblRhZ0NvZGUgJiYgIWZsYWcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYWxsVGFnSHRtbCArPSAnPGRkIGNsYXNzPVwiYWN0aXZlXCIgZGF0YS10YWdDb2RlPVwiJyArIHZhbC50YWdDb2RlICsgJ1wiIGRhdGEtdGFnTmFtZT1cIicgKyB2YWwudGFnTmFtZSArICdcIj4nICsgdmFsLnRhZ05hbWUuc3Vic3RyaW5nKDAsIDUpICsgJ+KApicgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc21hbGxUYWdIdG1sICs9ICc8ZGQgZGF0YS10YWdDb2RlPVwiJyArIHZhbC50YWdDb2RlICsgJ1wiIGRhdGEtdGFnTmFtZT1cIicgKyB2YWwudGFnTmFtZSArICdcIj4nICsgdmFsLnRhZ05hbWUuc3Vic3RyaW5nKDAsIDUpICsgJ+KApicgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZhbC50YWdDb2RlID09IGN1ck1pblRhZ0NvZGUgJiYgIWZsYWcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNtYWxsVGFnSHRtbCArPSAnPGRkIGNsYXNzPVwiYWN0aXZlXCIgZGF0YS10YWdDb2RlPVwiJyArIHZhbC50YWdDb2RlICsgJ1wiIGRhdGEtdGFnTmFtZT1cIicgKyB2YWwudGFnTmFtZSArICdcIj4nICsgdmFsLnRhZ05hbWUgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc21hbGxUYWdIdG1sICs9ICc8ZGQgZGF0YS10YWdDb2RlPVwiJyArIHZhbC50YWdDb2RlICsgJ1wiIGRhdGEtdGFnTmFtZT1cIicgKyB2YWwudGFnTmFtZSArICdcIj4nICsgdmFsLnRhZ05hbWUgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAkKCcjU01BTExfVEFHJykuaHRtbChzbWFsbFRhZ0h0bWwpO1xyXG4gICAgICAgICAgICAgICAgJCgnLnNtYWxsX3RhZ19ib3gnKS5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcclxuICAgIFxyXG4gICAgICAgICAgICAgICAgJChcIiNTTUFMTF9UQUcgZGRcIikub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuc2libGluZ3MoKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKCEkKHRoaXMpLmhhc0NsYXNzKCdhY3RpdmUnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGEgPSAkKHRoaXMpLmRhdGEoJ3RhZ2NvZGUnKTtcclxuICAgICAgICAgICAgICAgICAgICBtaW5UYWdDb2RlID0gZGF0YTtcclxuICAgICAgICAgICAgICAgICAgICBtaW5UYWdOYW1lID0gJCh0aGlzKS5kYXRhKCd0YWduYW1lJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnRhZ0luZm8nKS50ZXh0KG1heFRhZ05hbWUgKyAnIC0gJyArIG1pblRhZ05hbWUpO1xyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjU01BTExfVEFHJykuaHRtbCgnJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcuc21hbGxfdGFnX2JveCcpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGdldFBpY2tlck9wdCgpIHtcclxuICAgICAgICAgICAgcGlja2VyT3B0ID0ge307XHJcbiAgICAgICAgICAgICQuZWFjaChmaWx0ZXJEYXRhcy5TbGljZW5vTEROYW1lSnNvbiwgZnVuY3Rpb24gKGluZGV4LCB2YWwpIHtcclxuICAgICAgICAgICAgICAgIHZhciBpZHhLZXkgPSB2YWwubmFtZTtcclxuICAgICAgICAgICAgICAgIC8vIHBpY2tlck9wdFtpZHhLZXldID0gWyflhajpg6gnXTtcclxuICAgICAgICAgICAgICAgIHBpY2tlck9wdFtpZHhLZXldID0gW107XHJcbiAgICAgICAgICAgICAgICBpZiAodmFsLmNoaWxkcmVuKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJC5lYWNoKHZhbC5jaGlsZHJlbiwgZnVuY3Rpb24gKGlkeCwgdmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcGlja2VyT3B0W2lkeEtleV0ucHVzaCh2YWx1ZS5uYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZ2V0RGlzdFBpY2tlck9wdCgpIHtcclxuICAgICAgICAgICAgZGlzdFBpY2tlck9wdCA9IHt9O1xyXG4gICAgICAgICAgICAkLmVhY2goZmlsdGVyRGF0YXMuRGlzdHJpY3RKc29uLCBmdW5jdGlvbiAoaW5kZXgsIHZhbCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGlkeEtleSA9IHZhbC5uYW1lO1xyXG4gICAgICAgICAgICAgICAgZGlzdFBpY2tlck9wdFtpZHhLZXldID0gWyflhajpg6gnXTtcclxuICAgICAgICAgICAgICAgIC8vIGRpc3RQaWNrZXJPcHRbaWR4S2V5XSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgaWYgKHZhbC5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICAgICAgICAgICQuZWFjaCh2YWwuY2hpbGRyZW4sIGZ1bmN0aW9uIChpZHgsIHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3RQaWNrZXJPcHRbaWR4S2V5XS5wdXNoKHZhbHVlLm5hbWUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBmdW5jdGlvbiBnZXRUYWdQaWNrZXJPcHQoKSB7XHJcbiAgICAgICAgLy8gICAgIHRhZ1BpY2tlck9wdCA9IHt9O1xyXG4gICAgICAgIC8vICAgICAkLmVhY2goZmlsdGVyRGF0YXMuc3VwZXJ2aXNlVGFnLCBmdW5jdGlvbiAoaW5kZXgsIHZhbCkge1xyXG4gICAgICAgIC8vICAgICAgICAgdmFyIGlkeEtleSA9IHZhbC5wYXJhbU5hbWU7XHJcbiAgICAgICAgLy8gICAgICAgICB0YWdQaWNrZXJPcHRbaWR4S2V5XSA9IFtdO1xyXG4gICAgICAgIC8vICAgICAgICAgaWYgKGluZGV4ID09IDApIHtcclxuICAgICAgICAvLyAgICAgICAgICAgICBhamF4TWluVGFnT3B0KGlkeEtleSwgdmFsLnBhcmFtQ29kZSk7XHJcbiAgICAgICAgLy8gICAgICAgICB9XHJcbiAgICAgICAgLy8gICAgIH0pXHJcbiAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICAvLyBmdW5jdGlvbiBhamF4TWluVGFnT3B0KG5hbWUsIGNvZGUpIHtcclxuICAgICAgICAvLyAgICAgLy8gcHJlVGFnTWluT3B0ID0gW3t0YWdOYW1lOiAn5Z6D5Zy+5aGr5Z+L5Zy6JywgdGFnQ29kZTogJ0EwMTkwMDAwMDAxMDAwMDAxNCd9LFxyXG4gICAgICAgIC8vICAgICAvLyB7dGFnTmFtZTogJ+eOr+S/nemDqOmXqDIwMTgxMTI2JywgdGFnQ29kZTogJ0EwMTkwMDAwMDAxMDAwMDAwMyd9LFxyXG4gICAgICAgIC8vICAgICAvLyB7dGFnTmFtZTogJ+Weg+WcvuWhq+Wfi+WcujIwMTgxMTI2JywgdGFnQ29kZTogJ0EwMTkwMDAwMDAxMDAwMDAwMyd9LFxyXG4gICAgICAgIC8vICAgICAvLyB7dGFnTmFtZTogJ+eOr+S/nemDqOmXqCcsIHRhZ0NvZGU6ICdBMDE5MDAwMDAwMTAwMDAwMDMnfV07XHJcbiAgICAgICAgLy8gICAgIC8vICQuZWFjaChwcmVUYWdNaW5PcHQsIGZ1bmN0aW9uIChpZHgsIHZhbHVlKSB7XHJcbiAgICAgICAgLy8gICAgIC8vICAgICB0YWdQaWNrZXJPcHRbbmFtZV0ucHVzaCh2YWx1ZS50YWdOYW1lKTtcclxuICAgICAgICAvLyAgICAgLy9cclxuICAgICAgICAvLyAgICAgLy8gfSlcclxuICAgICAgICAvLyAgICAgJC5hamF4KHtcclxuICAgICAgICAvLyAgICAgICAgIGFzeW5jOiBmYWxzZSxcclxuICAgICAgICAvLyAgICAgICAgIHR5cGU6IFwiUE9TVFwiLFxyXG4gICAgICAgIC8vICAgICAgICAgdXJsOiBlbmNvZGVVUkkoYmFzZVVybCArIHRhZ0FjdGlvbiksXHJcbiAgICAgICAgLy8gICAgICAgICBkYXRhOiBKU09OLnN0cmluZ2lmeSh7ICdlbmNQYXJhbXNTdHInOiBlbmNyeXB0KEpTT04uc3RyaW5naWZ5KHsgdG9rZW46IHRva2VuLCB1c2VySWQ6IHVzZXJJZCwgdGFnTGFyZ2VDYXRlZ29yeTogY29kZSB9KSl9KSxcclxuICAgICAgICAvLyAgICAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgLy8gICAgICAgICAvLyBkYXRhVHlwZTogXCJqc29ucFwiLFxyXG4gICAgICAgIC8vICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgaWYgKHR5cGVvZiByZXMgPT0gJ3N0cmluZycpIHtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgcHJlVGFnTWluT3B0ID0gSlNPTi5wYXJzZShyZXMpLmRhdGE7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgcHJlVGFnTWluT3B0ID0gcmVzLmRhdGE7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgfVxyXG4gICAgICAgIC8vICAgICAgICAgICAgICQuZWFjaChwcmVUYWdNaW5PcHQsIGZ1bmN0aW9uIChpZHgsIHZhbHVlKSB7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIHRhZ1BpY2tlck9wdFtuYW1lXS5wdXNoKHZhbHVlLnRhZ05hbWUpO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgLy8gICAgICAgICB9LFxyXG4gICAgICAgIC8vICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAvLyAgICAgICAgICAgICBkZC5hbGVydCh7IGNvbnRlbnQ6IGVyci5tc2cgfSk7XHJcbiAgICAgICAgLy8gICAgICAgICB9XHJcbiAgICAgICAgLy8gICAgIH0pO1xyXG4gICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gaW5pdEZpbHRlckh0bWwgKCkge1xyXG4gICAgICAgICAgICB2YXIgbWFya2V0SHRtbCA9ICcnLCB0eXBlSHRtbCA9ICcnLCBzdGF0dXNIdG1sID0gJycsIHRhZ0h0bWwgPSAnJztcclxuICAgICAgICAgICAgJC5lYWNoKGZpbHRlckRhdGFzLm1hcmtldFR5cGUsIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgICAgICBtYXJrZXRIdG1sICs9ICc8ZGQgZGF0YS1wYXJhbUNvZGU9XCInICsgdmFsLnBhcmFtQ29kZSArICdcIiBkYXRhLXBhcmFtQ29kZVR5cGU9XCInICsgdmFsLnBhcmFtQ29kZVR5cGUgKyAnXCI+JyArIHZhbC5wYXJhbU5hbWUgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJC5lYWNoKGZpbHRlckRhdGFzLmNoZWNrVHlwZSwgZnVuY3Rpb24gKGluZGV4LCB2YWwpIHtcclxuICAgICAgICAgICAgICAgIHR5cGVIdG1sICs9ICc8ZGQgZGF0YS1wYXJhbUNvZGU9XCInICsgdmFsLnBhcmFtQ29kZSArICdcIiBkYXRhLXBhcmFtQ29kZVR5cGU9XCInICsgdmFsLnBhcmFtQ29kZVR5cGUgKyAnXCI+JyArIHZhbC5wYXJhbU5hbWUgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJC5lYWNoKGZpbHRlckRhdGFzLnRhc2tTdGF0dXMsIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgICAgICBzdGF0dXNIdG1sICs9ICc8ZGQgZGF0YS1wYXJhbUNvZGU9XCInICsgdmFsLnBhcmFtQ29kZSArICdcIiBkYXRhLXBhcmFtQ29kZVR5cGU9XCInICsgdmFsLnBhcmFtQ29kZVR5cGUgKyAnXCI+JyArIHZhbC5wYXJhbU5hbWUgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8gJC5lYWNoKGZpbHRlckRhdGFzLnN1cGVydmlzZVRhZywgZnVuY3Rpb24gKGluZGV4LCB2YWwpIHtcclxuICAgICAgICAgICAgLy8gICAgIHRhZ0h0bWwgKz0gJzxkZCBkYXRhLXBhcmFtQ29kZT1cIicgKyB2YWwucGFyYW1Db2RlICsgJ1wiIGRhdGEtcGFyYW1Db2RlMT1cIicgKyB2YWwucGFyYW1Db2RlMVxyXG4gICAgICAgICAgICAvLyAgICAgKyAnXCIgZGF0YS1wYXJhbUNvZGUyPVwiJyArIHZhbC5wYXJhbUNvZGUyICsgJ1wiIGRhdGEtcGFyYW1Db2RlVHlwZT1cIicgKyB2YWwucGFyYW1Db2RlVHlwZSArICdcIj4nICsgdmFsLnBhcmFtTmFtZSArICc8L2RkPic7XHJcbiAgICAgICAgICAgIC8vIH0pO1xyXG4gICAgICAgICAgICAkLmVhY2godGFnTGluZURhdGEsIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgICAgICB0YWdIdG1sICs9ICc8ZGQgZGF0YS1kdXR5RGVwdENvZGU9XCInICsgdmFsLmR1dHlEZXB0Q29kZSArICdcIj4nICsgdmFsLmR1dHlEZXB0TmFtZSArICc8L2RkPic7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAkKCcjTUFSS0VUX1RZUEUnKS5odG1sKG1hcmtldEh0bWwpO1xyXG4gICAgICAgICAgICAkKCcjVEFTS19UWVBFJykuaHRtbCh0eXBlSHRtbCk7XHJcbiAgICAgICAgICAgICQoJyNUQVNLX1NUQVRVUycpLmh0bWwoc3RhdHVzSHRtbCk7XHJcbiAgICAgICAgICAgIC8vICQoJyNTVVBFUlZJU0VfVEFHJykuaHRtbCh0YWdIdG1sKTtcclxuICAgICAgICAgICAgJCgnI1NVUF9UQUdfTElORScpLmh0bWwodGFnSHRtbCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAkKFwiLmZpbHRlcl9saXN0IGRkXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uIChldikge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxyXG4gICAgICAgICAgICAgICAgaWYgKCEkKHRoaXMpLmhhc0NsYXNzKCdhY3RpdmUnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgICQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdmFyIHR5cGUgPSAkKGV2LnRhcmdldClbMF0uZGF0YXNldC5wYXJhbWNvZGV0eXBlO1xyXG4gICAgICAgICAgICAgICAgc3dpdGNoKHR5cGUpe1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJNQVJLRVRfVFlQRVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWdhbEVudGl0eUNhdGEgPSAkKGV2LnRhcmdldClbMF0uZGF0YXNldC5wYXJhbWNvZGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJUQVNLX1RZUEVcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgY2hlY2tUeXBlID0gJChldi50YXJnZXQpWzBdLmRhdGFzZXQucGFyYW1jb2RlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiVEFTS19TVEFUVVNcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGFza1N0YXR1cyA9ICQoZXYudGFyZ2V0KVswXS5kYXRhc2V0LnBhcmFtY29kZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gY2FzZSBcIlNVUEVSVklTRV9UQUdfTEFSR0VDTEFTU1wiOlxyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBsZWdhbEVudGl0eVRhZyA9ICQoZXYudGFyZ2V0KVswXS5kYXRhc2V0LnBhcmFtY29kZTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgbGVnYWxFbnRpdHlUYWcxID0gJChldi50YXJnZXQpWzBdLmRhdGFzZXQucGFyYW1jb2RlMTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgbGVnYWxFbnRpdHlUYWcyID0gJChldi50YXJnZXQpWzBdLmRhdGFzZXQucGFyYW1jb2RlMjtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgJChcIiNTVVBfVEFHX0xJTkUgZGRcIikub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgZHV0eURlcHRDb2RlID0gJCh0aGlzKS5kYXRhKCdkdXR5ZGVwdGNvZGUnKTtcclxuICAgICAgICAgICAgICAgIGR1dHlEZXB0Q29kZU5hbWUgPSAkKHRoaXMpLnRleHQoKTtcclxuICAgICAgICAgICAgICAgICQodGhpcykuc2libGluZ3MoKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoISQodGhpcykuaGFzQ2xhc3MoJ2FjdGl2ZScpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBtaW5UYWdDb2RlID0gJyc7XHJcbiAgICAgICAgICAgICAgICBtaW5UYWdOYW1lID0gJyc7XHJcbiAgICAgICAgICAgICAgICBtYXhUYWdDb2RlID0gJyc7XHJcbiAgICAgICAgICAgICAgICBtYXhUYWdOYW1lID0gJyc7XHJcbiAgICAgICAgICAgICAgICAkKCcubGFyZ2VfdGFnX2JveCcpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcuc21hbGxfdGFnX2JveCcpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgICAgICAgICAkKCcudGFnSW5mbycpLnRleHQoZHV0eURlcHRDb2RlTmFtZSk7XHJcbiAgICAgICAgICAgICAgICAkKCcudGFnSW5mby1ib3gnKS5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcclxuICAgICAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAnc3VwZXJUYWcnLCB2YWw6IGR1dHlEZXB0Q29kZX0pO1xyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkKCcuZmlsdGVyQnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcuY3VzdG9tLW1hc2snKS5hZGRDbGFzcygnY3VzdG9tLW1hc2stLXZpc2libGUnKTtcclxuICAgICAgICAgICAgJCgnLmN1c3RvbS1jb250YWluZXInKS5hZGRDbGFzcygnY3VzdG9tLWNvbnRhaW5lci0tdmlzaWJsZScpO1xyXG4gICAgICAgICAgICAkKCcuY3VzdG9tLWNvbnRhaW5lciBsaScpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnLmN1c3RvbS1tYXNrJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcuY3VzdG9tLW1hc2snKS5yZW1vdmVDbGFzcygnY3VzdG9tLW1hc2stLXZpc2libGUnKTtcclxuICAgICAgICAgICAgaWYgKCQoXCIuZmxvYXRpbmdfYm94XCIpLmhhc0NsYXNzKCdhY3RpdmUnKSkge1xyXG4gICAgICAgICAgICAgICAgJChcIi5mbG9hdGluZ19ib3hcIikucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgJCgnLmZpbHRlcl9saXN0X2JveCcpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoJy5jdXN0b20tY29udGFpbmVyJykucmVtb3ZlQ2xhc3MoJ2N1c3RvbS1jb250YWluZXItLXZpc2libGUnKTtcclxuICAgICAgICAgICAgICAgICQoJy5jdXN0b20tY29udGFpbmVyIGxpJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJy5jdXN0b20tY29udGFpbmVyJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGV2KSB7XHJcbiAgICAgICAgICAgICQoJy5jdXN0b20tbWFzaycpLnJlbW92ZUNsYXNzKCdjdXN0b20tbWFzay0tdmlzaWJsZScpO1xyXG4gICAgICAgICAgICAkKCcuY3VzdG9tLWNvbnRhaW5lcicpLnJlbW92ZUNsYXNzKCdjdXN0b20tY29udGFpbmVyLS12aXNpYmxlJyk7XHJcbiAgICAgICAgICAgICQoJy5jdXN0b20tY29udGFpbmVyIGxpJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICB2YXIgbWV0dGVyID0gJChldi50YXJnZXQpLmRhdGEoJ21ldHRlcicpO1xyXG4gICAgICAgICAgICBpZiAobWV0dGVyID09IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgICQoJy5maWx0ZXJCdG4gc3BhbicpLmh0bWwoJ+S4jemZkCcgKyAnPGkgY2xhc3M9XCJpY29uLWFycm93XCI+PC9pPicpXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcuZmlsdGVyQnRuIHNwYW4nKS5odG1sKG1ldHRlciArICc8aSBjbGFzcz1cImljb24tYXJyb3dcIj48L2k+JylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ2Rpc3RhbmNlJywgdmFsOiBtZXR0ZXJ9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5mbG9hdGluZ19ib3hcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnLmN1c3RvbS1tYXNrJykuYWRkQ2xhc3MoJ2N1c3RvbS1tYXNrLS12aXNpYmxlJyk7XHJcbiAgICAgICAgICAgICQoJy5maWx0ZXJfbGlzdF9ib3gnKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGlmIChjdXJUYXNrU3RhdHVzKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjVEFTS19TVEFUVVMgZGQnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXJyID0galF1ZXJ5Lm1ha2VBcnJheSgkKCcjVEFTS19TVEFUVVMgZGQnKSk7XHJcbiAgICAgICAgICAgICAgICAkLmVhY2goYXJyLCBmdW5jdGlvbiAoaW5kZXgsIHZhbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWwuZGF0YXNldC5wYXJhbWNvZGUgPT0gdGFza1N0YXR1cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHZhbCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjVEFTS19TVEFUVVMgZGQnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGNpdHlDb2RlLmxlbmd0aCA+IDAgfHwgZGlzdENvZGUubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHVzZXJMZXZlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNwaWNrZXItYnRuJykudGV4dChjaXR5TmFtZS5qb2luKCctJykpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNwaWNrZXItYnRuJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkaXN0TmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjZGlzdHJpY3QtYnRuJykudGV4dChkaXN0TmFtZS5qb2luKCctJykpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjZGlzdHJpY3QtYnRuJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLnRleHQoZGlzdE5hbWUuam9pbignLScpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjZGlzdHJpY3QtYnRuJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKHVzZXJMZXZlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNwaWNrZXItYnRuJykudGV4dCgn5biCfOWMunzljr8nKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjcGlja2VyLWJ0bicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjZGlzdHJpY3QtYnRuJykudGV4dCgn5ZWG5ZyIL+eJh+WMuicpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNkaXN0cmljdC1idG4nKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNkaXN0cmljdC1idG4nKS50ZXh0KCfllYblnIgv54mH5Yy6Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBpZiAoY3VyTWluVGFnQ29kZSkge1xyXG4gICAgICAgICAgICAvLyAgICAgJCgnI3RhZy1idG4nKS50ZXh0KGN1ck1pblRhZ05hbWUpO1xyXG4gICAgICAgICAgICAvLyAgICAgJCgnI3RhZy1idG4nKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIC8vIH0gZWxzZSBpZiAoY3VyTWF4VGFnQ29kZSkge1xyXG4gICAgICAgICAgICAvLyAgICAgJCgnI3RhZy1idG4nKS50ZXh0KGN1ck1heFRhZ05hbWUpO1xyXG4gICAgICAgICAgICAvLyAgICAgJCgnI3RhZy1idG4nKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIC8vIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vICAgICAkKCcjdGFnLWJ0bicpLnRleHQoJ+mAieaLqeebkeeuoeexu+WeiycpO1xyXG4gICAgICAgICAgICAvLyAgICAgJCgnI3RhZy1idG4nKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgJCgnLnRhZ0luZm8tYm94JykuY3NzKCdkaXNwbGF5JywgJ25vbmUnKTtcclxuICAgICAgICAgICAgJCgnLmxhcmdlX3RhZ19ib3gnKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICAgICAkKCcuc21hbGxfdGFnX2JveCcpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgICAgICQoJyNTVVBfVEFHX0xJTkUgZGQnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGlmIChjdXJNYXhUYWdDb2RlKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXJyID0galF1ZXJ5Lm1ha2VBcnJheSgkKCcjU1VQX1RBR19MSU5FIGRkJykpO1xyXG4gICAgICAgICAgICAgICAgJC5lYWNoKGFyciwgZnVuY3Rpb24gKGluZGV4LCB2YWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsLmRhdGFzZXQuZHV0eWRlcHRjb2RlID09IGN1ckR1dHlEZXB0Q29kZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHZhbCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICByZW5kZXJMYXJnZVRhZyhmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICByZW5kZXJTbWFsbFRhZyhmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICBpZiAoY3VyTWluVGFnQ29kZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJy50YWdJbmZvJykudGV4dChjdXJNYXhUYWdOYW1lICsgJyAtICcgKyBjdXJNaW5UYWdOYW1lKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnLnRhZ0luZm8nKS50ZXh0KGN1ck1heFRhZ05hbWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgJCgnLnRhZ0luZm8tYm94JykuY3NzKCdkaXNwbGF5JywgJ2Jsb2NrJyk7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcudGFnSW5mbycpLnRleHQoJycpO1xyXG4gICAgICAgICAgICAgICAgJCgnI0xhcmdlX1RBRycpLmh0bWwoJycpO1xyXG4gICAgICAgICAgICAgICAgJCgnI1NNQUxMX1RBRycpLmh0bWwoJycpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjdXJMZWdhbEVudGl0eUNhdGEpIHtcclxuICAgICAgICAgICAgICAgICQoJyNNQVJLRVRfVFlQRSBkZCcpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIHZhciBhcnIgPSBqUXVlcnkubWFrZUFycmF5KCQoJyNNQVJLRVRfVFlQRSBkZCcpKTtcclxuICAgICAgICAgICAgICAgICQuZWFjaChhcnIsIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbC5kYXRhc2V0LnBhcmFtY29kZSA9PSBsZWdhbEVudGl0eUNhdGEpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh2YWwpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI01BUktFVF9UWVBFIGRkJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjdXJDaGVja1R5cGUpIHtcclxuICAgICAgICAgICAgICAgICQoJyNUQVNLX1RZUEUgZGQnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXJyID0galF1ZXJ5Lm1ha2VBcnJheSgkKCcjVEFTS19UWVBFIGRkJykpO1xyXG4gICAgICAgICAgICAgICAgJC5lYWNoKGFyciwgZnVuY3Rpb24gKGluZGV4LCB2YWwpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodmFsLmRhdGFzZXQucGFyYW1jb2RlID09IGNoZWNrVHlwZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHZhbCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjVEFTS19UWVBFIGRkJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIGlmIChjdXJMZWdhbEVudGl0eVRhZykge1xyXG4gICAgICAgICAgICAvLyAgICAgJCgnI1NVUEVSVklTRV9UQUcgZGQnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIC8vICAgICB2YXIgYXJyID0galF1ZXJ5Lm1ha2VBcnJheSgkKCcjU1VQRVJWSVNFX1RBRyBkZCcpKTtcclxuICAgICAgICAgICAgLy8gICAgICQuZWFjaChhcnIsIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgaWYgKHZhbC5kYXRhc2V0LnBhcmFtY29kZSA9PSBsZWdhbEVudGl0eVRhZykge1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICAkKHZhbCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgICAgICAvLyAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gICAgIH0pXHJcbiAgICAgICAgICAgIC8vIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vICAgICAkKCcjU1VQRVJWSVNFX1RBRyBkZCcpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcuY3VzdG9tLW1hc2snKS5vbigndG91Y2htb3ZlJywgZnVuY3Rpb24gKGV2KSB7XHJcbiAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJy5jdXN0b20tY29udGFpbmVyJykub24oJ3RvdWNobW92ZScsIGZ1bmN0aW9uKGV2KSB7XHJcbiAgICAgICAgICAgIGV2LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG5cclxuICAgICAgICAkKCcuaXB0U2VhcmNoJykub24oJ2tleWRvd24nLGZ1bmN0aW9uKGUpe1xyXG4gICAgICAgICAgICAvLyBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgIGlmKGUua2V5Q29kZSA9PSAxMyl7XHJcbiAgICAgICAgICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ2tleXdvcmQnLCB2YWw6IGUudGFyZ2V0LnZhbHVlIHx8ICcnfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnLmJ0bl9oYW5kbGVyX2JveCBsaScpLm9uKCdjbGljaycsIGZ1bmN0aW9uIChldikge1xyXG4gICAgICAgICAgICB2YXIgZmlsdGVyID0gJChldi50YXJnZXQpLmRhdGEoJ2ZpbHRlcicpO1xyXG4gICAgICAgICAgICB2YXIgdGl0bGUgPSAkKGV2LnRhcmdldCkuZGF0YSgndGl0bGUnKTtcclxuICAgICAgICAgICAgJCh0aGlzKS5jbG9zZXN0KFwibGlcIikuYWRkQ2xhc3MoJ2FjdGl2ZScpLnNpYmxpbmdzKCkucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXHJcbiAgICAgICAgICAgIGlmIChmaWx0ZXIgPT0gXCJcIiB8fCBmaWx0ZXIgPT0gXCIxXCIgfHwgZmlsdGVyID09IFwiMlwiIHx8IGZpbHRlciA9PSBcIjNcIikge1xyXG4gICAgICAgICAgICAgICAgJCgnLmNoZWNrX3RpdGxlJykudGV4dCh0aXRsZSkuZmFkZUluKCk7XHJcbiAgICAgICAgICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ2NoZWNrU3RhdGUnLCB2YWw6IGZpbHRlcn0pO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGZpbHRlciA9PSBcInJlc2V0XCIpIHtcclxuICAgICAgICAgICAgICAgICQoJy5jaGVja190aXRsZScpLmZhZGVPdXQoKTtcclxuICAgICAgICAgICAgICAgIG1hcmtlcnMuY2xlYXJMYXllcnMoKTtcclxuICAgICAgICAgICAgICAgIG1hcC5zZXRWaWV3KFtOdW1iZXIoaW5pdExhdGxuZy5sYXQpLCBOdW1iZXIoaW5pdExhdGxuZy5sb24pXSwgaW5pdFpvb20pO1xyXG4gICAgICAgICAgICAgICAgY2lyY2xlID0gTC5jaXJjbGUoW21hcC5nZXRDZW50ZXIoKS5sYXQsIG1hcC5nZXRDZW50ZXIoKS5sbmddLCB7cmFkaXVzOiAzMH0pO1xyXG4gICAgICAgICAgICAgICAgbWFwLmFkZExheWVyKGNpcmNsZSk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgICQoXCIuY2FsbF90ZWxcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIHZhciBwaG9uZU51bSA9ICQoXCIuY2FsbF90ZWxcIikuZGF0YShcInRlbFwiKTtcclxuICAgICAgICAgICAgZGQucG9zdE1lc3NhZ2Uoe3R5cGU6ICdjYWxsUGhvbmUnLCB2YWw6IHBob25lTnVtfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIubWVudV9pY29uXzNcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAnb3Blbk1hcCcsIHZhbDogbWFwUGFyYW1zfSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIuZGV0YWlsXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ2RldGFpbCcsIHZhbDogaWR4fSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIuZ29jaGVja1wiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZGQucG9zdE1lc3NhZ2Uoe3R5cGU6ICdnb2NoZWNrJywgdmFsOiBpZHh9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi51bmZpbmRcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAndW5maW5kJywgdmFsOiBpZHh9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5yZXNldF9idG5cIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGFyZWFDb2RlID0gW107IGRpc3ROYW1lID0gW107IGRpc3RDb2RlID0gW107XHJcbiAgICAgICAgICAgIGNpdHlOYW1lID0gW107IGNpdHlDb2RlID0gW107XHJcbiAgICAgICAgICAgICQoJyNwaWNrZXItYnRuJykudGV4dCgn5biCfOWMunzljr8nKTtcclxuICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLnRleHQoJ+WVhuWciC/niYfljLonKTtcclxuICAgICAgICAgICAgLy8gJCgnI3RhZy1idG4nKS50ZXh0KCfpgInmi6nnm5HnrqHnsbvlnosnKTtcclxuICAgICAgICAgICAgLy8gJCgnI3RhZy1idG4nKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGlmICh1c2VyTGV2ZWwpIHtcclxuICAgICAgICAgICAgICAgICQoJyNwaWNrZXItYnRuJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICQoJyNkaXN0cmljdC1idG4nKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAkKFwiLmZpbHRlcl90eXBlIGRkXCIpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnLmN1c3RvbS1tYXNrJykucmVtb3ZlQ2xhc3MoJ2N1c3RvbS1tYXNrLS12aXNpYmxlJyk7XHJcbiAgICAgICAgICAgICQoXCIuZmxvYXRpbmdfYm94XCIpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnLmZpbHRlcl9saXN0X2JveCcpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgY3VyVGFza1N0YXR1cyA9ICcnXHJcbiAgICAgICAgICAgIGN1ckxlZ2FsRW50aXR5Q2F0YSA9ICcnXHJcbiAgICAgICAgICAgIGN1ckNoZWNrVHlwZSA9ICcnXHJcbiAgICAgICAgICAgIC8vIGN1ckxlZ2FsRW50aXR5VGFnID0gJydcclxuICAgICAgICAgICAgLy8gY3VyTGVnYWxFbnRpdHlUYWcxID0gJydcclxuICAgICAgICAgICAgLy8gY3VyTGVnYWxFbnRpdHlUYWcyID0gJydcclxuICAgICAgICAgICAgY3VycmVudEFyZWFDb2RlID0gJydcclxuICAgICAgICAgICAgbWluVGFnQ29kZSA9ICcnXHJcbiAgICAgICAgICAgIG1heFRhZ0NvZGUgPSAnJ1xyXG4gICAgICAgICAgICBtaW5UYWdOYW1lID0gJydcclxuICAgICAgICAgICAgbWF4VGFnTmFtZSA9ICcnXHJcbiAgICAgICAgICAgIGR1dHlEZXB0Q29kZSA9ICcnXHJcbiAgICAgICAgICAgIGN1ck1pblRhZ05hbWUgPSAnJ1xyXG4gICAgICAgICAgICBjdXJNYXhUYWdOYW1lID0gJydcclxuICAgICAgICAgICAgY3VyTWluVGFnQ29kZSA9ICcnXHJcbiAgICAgICAgICAgIGN1ck1heFRhZ0NvZGUgPSAnJ1xyXG4gICAgICAgICAgICBjdXJMYXJnZVRhZ0RhdGEgPSBbXTtcclxuICAgICAgICAgICAgY3VyU21hbGxUYWdEYXRhID0gW107XHJcbiAgICAgICAgICAgIGN1ckR1dHlEZXB0Q29kZSA9ICcnO1xyXG4gICAgICAgICAgICB2YXIgcHJlRmlsdGVyRGF0YSA9IHtcclxuICAgICAgICAgICAgICAgIHRhc2tTdGF0dXM6ICcnLFxyXG4gICAgICAgICAgICAgICAgYnVzaW5lc3NEaXN0cmljdDogJycsIC8v54mH5Yy6XHJcbiAgICAgICAgICAgICAgICBsZWdhbEVudGl0eUNhdGE6ICcnLFxyXG4gICAgICAgICAgICAgICAgY2hlY2tUeXBlOiAnJyxcclxuICAgICAgICAgICAgICAgIC8vIGxlZ2FsRW50aXR5VGFnOiAnJyxcclxuICAgICAgICAgICAgICAgIC8vIGxlZ2FsRW50aXR5VGFnMTogJycsXHJcbiAgICAgICAgICAgICAgICAvLyBsZWdhbEVudGl0eVRhZzI6ICcnLFxyXG4gICAgICAgICAgICAgICAgbG9jYWxBZG06ICcnLFxyXG4gICAgICAgICAgICAgICAgY3VyTWluVGFnQ29kZTogJycsXHJcbiAgICAgICAgICAgICAgICBjdXJNYXhUYWdDb2RlOiAnJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAnYnVzaW5lc3NEaXN0cmljdCcsIHZhbDogcHJlRmlsdGVyRGF0YX0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKFwiLmNvbmZpcm1fYnRuXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBhcmVhQ29kZSA9IGNpdHlDb2RlLmNvbmNhdChkaXN0Q29kZSk7XHJcbiAgICAgICAgICAgIC8vIGlmIChhcmVhQ29kZSkge1xyXG4gICAgICAgICAgICAvLyAgICAgY3VycmVudEFyZWFDb2RlID0gYXJlYUNvZGUuam9pbignLCcpO1xyXG4gICAgICAgICAgICAvLyB9IGVsc2UgeyAgICBcclxuICAgICAgICAgICAgLy8gICAgIGN1cnJlbnRBcmVhQ29kZSA9ICcnO1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIGN1clRhc2tTdGF0dXMgPSB0YXNrU3RhdHVzIHx8ICcnXHJcbiAgICAgICAgICAgIGN1ckxlZ2FsRW50aXR5Q2F0YSA9IGxlZ2FsRW50aXR5Q2F0YSB8fCAnJ1xyXG4gICAgICAgICAgICBjdXJDaGVja1R5cGUgPSBjaGVja1R5cGUgfHwgJydcclxuICAgICAgICAgICAgY3VyTWluVGFnQ29kZSA9IG1pblRhZ0NvZGUgfHwgJydcclxuICAgICAgICAgICAgY3VyTWF4VGFnQ29kZSA9IG1heFRhZ0NvZGUgfHwgJydcclxuICAgICAgICAgICAgY3VyTWluVGFnTmFtZSA9IG1pblRhZ05hbWUgfHwgJydcclxuICAgICAgICAgICAgY3VyTWF4VGFnTmFtZSA9IG1heFRhZ05hbWUgfHwgJydcclxuICAgICAgICAgICAgY3VyTGFyZ2VUYWdEYXRhID0gbGFyZ2VUYWdEYXRhIHx8IFtdXHJcbiAgICAgICAgICAgIGN1clNtYWxsVGFnRGF0YSA9IHNtYWxsVGFnRGF0YSB8fCBbXTtcclxuICAgICAgICAgICAgaWYgKGN1ck1heFRhZ0NvZGUpIHtcclxuICAgICAgICAgICAgICAgIGN1ckR1dHlEZXB0Q29kZSA9IGR1dHlEZXB0Q29kZTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGN1ckR1dHlEZXB0Q29kZSA9ICcnO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAvLyBjdXJMZWdhbEVudGl0eVRhZyA9IGxlZ2FsRW50aXR5VGFnIHx8ICcnXHJcbiAgICAgICAgICAgIC8vIGN1ckxlZ2FsRW50aXR5VGFnMSA9IGxlZ2FsRW50aXR5VGFnMSB8fCAnJ1xyXG4gICAgICAgICAgICAvLyBjdXJMZWdhbEVudGl0eVRhZzIgPSBsZWdhbEVudGl0eVRhZzIgfHwgJydcclxuICAgICAgICAgICAgdmFyIHByZUZpbHRlckRhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGFza1N0YXR1czogY3VyVGFza1N0YXR1cyxcclxuICAgICAgICAgICAgICAgICAgICAvLyBidXNpbmVzc0Rpc3RyaWN0OiBjdXJyZW50QXJlYUNvZGUsIC8v54mH5Yy6XHJcbiAgICAgICAgICAgICAgICAgICAgbGVnYWxFbnRpdHlDYXRhOiBjdXJMZWdhbEVudGl0eUNhdGEsXHJcbiAgICAgICAgICAgICAgICAgICAgY2hlY2tUeXBlOiBjdXJDaGVja1R5cGUsXHJcbiAgICAgICAgICAgICAgICAgICAgY3VyTWluVGFnQ29kZTogY3VyTWluVGFnQ29kZSxcclxuICAgICAgICAgICAgICAgICAgICBjdXJNYXhUYWdDb2RlOiBjdXJNYXhUYWdDb2RlXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gbGVnYWxFbnRpdHlUYWc6IGN1ckxlZ2FsRW50aXR5VGFnLFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIGxlZ2FsRW50aXR5VGFnMTogY3VyTGVnYWxFbnRpdHlUYWcxLFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIGxlZ2FsRW50aXR5VGFnMjogY3VyTGVnYWxFbnRpdHlUYWcyXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGNpdHlDb2RlLmxlbmd0aCA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBwcmVGaWx0ZXJEYXRhWydsb2NhbEFkbSddID0gY2l0eUNvZGVbMF07XHJcbiAgICAgICAgICAgICAgICBwcmVGaWx0ZXJEYXRhWydidXNpbmVzc0Rpc3RyaWN0J10gPSAnJztcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChkaXN0Q29kZS5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHByZUZpbHRlckRhdGFbJ2xvY2FsQWRtJ10gPSBjaXR5Q29kZVswXTtcclxuICAgICAgICAgICAgICAgICAgICBwcmVGaWx0ZXJEYXRhWydidXNpbmVzc0Rpc3RyaWN0J10gPSAnJztcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJlRmlsdGVyRGF0YVsnbG9jYWxBZG0nXSA9IGRpc3RDb2RlWzBdO1xyXG4gICAgICAgICAgICAgICAgICAgIHByZUZpbHRlckRhdGFbJ2J1c2luZXNzRGlzdHJpY3QnXSA9IGRpc3RDb2RlWzFdIHx8ICcnO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICQoJy5jdXN0b20tbWFzaycpLnJlbW92ZUNsYXNzKCdjdXN0b20tbWFzay0tdmlzaWJsZScpO1xyXG4gICAgICAgICAgICAkKFwiLmZsb2F0aW5nX2JveFwiKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICQoJy5maWx0ZXJfbGlzdF9ib3gnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAnYnVzaW5lc3NEaXN0cmljdCcsIHZhbDogcHJlRmlsdGVyRGF0YX0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBidG4ub25jbGljayA9IGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgICAgIC8vIGRhdGEgPSB7XCLlsI/mmI7lrrZcIjpbXSwgXCLlsI/nuqLlrrZcIjpbXCLlsI/nuqLniLjniLhcIiwgXCLlsI/nuqLlpojlpohcIl19XHJcbiAgICAgICAgICAgIHZhciBwaWNrZXJWaWV3ID0gbmV3IFBpY2tlclZpZXcoe1xyXG4gICAgICAgICAgICAgICAgYmluZEVsZW06IGJ0bixcclxuICAgICAgICAgICAgICAgIGRhdGE6IHBpY2tlck9wdCxcclxuICAgICAgICAgICAgICAgIC8vIGRhdGE6IGRhdGEsXHJcbiAgICAgICAgICAgICAgICB0aXRsZTogJ+W4gnzljLp85Y6/JyxcclxuICAgICAgICAgICAgICAgIGxlZnRUZXh0OiAn5Y+W5raIJyxcclxuICAgICAgICAgICAgICAgIHJpZ2h0VGV4dDogJ+ehruWumicsXHJcbiAgICAgICAgICAgICAgICByaWdodEZuOiBmdW5jdGlvbiggc2VsZWN0QXJyICl7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gdmFyIGluZGV4QXJyeSA9IGJ0bi5nZXRBdHRyaWJ1dGUoXCJzZWxlY3RjYWNoZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICBjaXR5TmFtZSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGNpdHlDb2RlID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbEFsbDtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc3ViU2xpY2Vub0xETmFtZUpzb247XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpcnN0SWR4ID0gZmlsdGVyRGF0YXMuU2xpY2Vub0xETmFtZUpzb24uZmluZEluZGV4KGZ1bmN0aW9uKG9iail7cmV0dXJuIG9iai5uYW1lID09IHNlbGVjdEFyclswXX0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGNpdHlDb2RlLnB1c2goZmlsdGVyRGF0YXMuU2xpY2Vub0xETmFtZUpzb25bZmlyc3RJZHhdLmNvZGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIChzZWxlY3RBcnJbMV0gIT0gJ+WFqOmDqCcpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgY2l0eU5hbWUgPSBzZWxlY3RBcnI7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIHNlbEFsbCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBzdWJTbGljZW5vTEROYW1lSnNvbiA9IGZpbHRlckRhdGFzLlNsaWNlbm9MRE5hbWVKc29uW2ZpcnN0SWR4XS5jaGlsZHJlbjtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgdmFyIHN1YklkeCA9IHN1YlNsaWNlbm9MRE5hbWVKc29uLmZpbmRJbmRleChmdW5jdGlvbih2YWwpe3JldHVybiB2YWwubmFtZSA9PSBzZWxlY3RBcnJbMV19KTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgY2l0eUNvZGUucHVzaChzdWJTbGljZW5vTEROYW1lSnNvbltzdWJJZHhdLmNvZGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIHNlbEFsbCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIGNpdHlOYW1lLnB1c2goc2VsZWN0QXJyWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgICAgICAgICAgY2l0eU5hbWUgPSBzZWxlY3RBcnI7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsQWxsID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgc3ViU2xpY2Vub0xETmFtZUpzb24gPSBmaWx0ZXJEYXRhcy5TbGljZW5vTEROYW1lSnNvbltmaXJzdElkeF0uY2hpbGRyZW47XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN1YklkeCA9IHN1YlNsaWNlbm9MRE5hbWVKc29uLmZpbmRJbmRleChmdW5jdGlvbih2YWwpe3JldHVybiB2YWwubmFtZSA9PSBzZWxlY3RBcnJbMV19KTtcclxuICAgICAgICAgICAgICAgICAgICBjaXR5Q29kZS5wdXNoKHN1YlNsaWNlbm9MRE5hbWVKc29uW3N1YklkeF0uY29kZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGJ0bi5pbm5lclRleHQgPSBjaXR5TmFtZS5qb2luKCctJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnRuLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsICdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICBkaXN0QnRuLmlubmVyVGV4dCA9ICfllYblnIgv54mH5Yy6JztcclxuICAgICAgICAgICAgICAgICAgICBkaXN0QnRuLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdEJ0bi5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCAnJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdE5hbWUgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICBkaXN0Q29kZSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAnc2hvd0Rpc3RyaWN0JywgdmFsOiB7bG9jYWxBZG06IGNpdHlDb2RlW2NpdHlDb2RlLmxlbmd0aCAtIDFdLCBzZWxBbGw6IHNlbEFsbH19KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBkaXN0QnRuLm9uY2xpY2sgPSBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICB2YXIgcGlja2VyVmlldyA9IG5ldyBQaWNrZXJWaWV3KHtcclxuICAgICAgICAgICAgICAgIGJpbmRFbGVtOiBkaXN0QnRuLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogZGlzdFBpY2tlck9wdCxcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAn5ZWG5ZyIL+eJh+WMuicsXHJcbiAgICAgICAgICAgICAgICBsZWZ0VGV4dDogJ+WPlua2iCcsXHJcbiAgICAgICAgICAgICAgICByaWdodFRleHQ6ICfnoa7lrponLFxyXG4gICAgICAgICAgICAgICAgcmlnaHRGbjogZnVuY3Rpb24oIHNlbGVjdEFyciApe1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3ROYW1lID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdENvZGUgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc3ViU2xpY2Vub0xETmFtZUpzb247XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpcnN0SWR4ID0gZmlsdGVyRGF0YXMuRGlzdHJpY3RKc29uLmZpbmRJbmRleChmdW5jdGlvbihvYmope3JldHVybiBvYmoubmFtZSA9PSBzZWxlY3RBcnJbMF19KTtcclxuICAgICAgICAgICAgICAgICAgICBkaXN0Q29kZS5wdXNoKGZpbHRlckRhdGFzLkRpc3RyaWN0SnNvbltmaXJzdElkeF0uY29kZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHNlbGVjdEFyclsxXSAhPSAn5YWo6YOoJykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXN0TmFtZSA9IHNlbGVjdEFycjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3ViU2xpY2Vub0xETmFtZUpzb24gPSBmaWx0ZXJEYXRhcy5EaXN0cmljdEpzb25bZmlyc3RJZHhdLmNoaWxkcmVuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgc3ViSWR4ID0gc3ViU2xpY2Vub0xETmFtZUpzb24uZmluZEluZGV4KGZ1bmN0aW9uKHZhbCl7cmV0dXJuIHZhbC5uYW1lID09IHNlbGVjdEFyclsxXX0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXN0Q29kZS5wdXNoKHN1YlNsaWNlbm9MRE5hbWVKc29uW3N1YklkeF0uY29kZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGlzdE5hbWUucHVzaChzZWxlY3RBcnJbMF0pO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAvLyBkaXN0TmFtZSA9IHNlbGVjdEFycjtcclxuICAgICAgICAgICAgICAgICAgICAvLyBzdWJTbGljZW5vTEROYW1lSnNvbiA9IGZpbHRlckRhdGFzLkRpc3RyaWN0SnNvbltmaXJzdElkeF0uY2hpbGRyZW47XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gdmFyIHN1YklkeCA9IHN1YlNsaWNlbm9MRE5hbWVKc29uLmZpbmRJbmRleChmdW5jdGlvbih2YWwpe3JldHVybiB2YWwubmFtZSA9PSBzZWxlY3RBcnJbMV19KTtcclxuICAgICAgICAgICAgICAgICAgICAvLyBkaXN0Q29kZS5wdXNoKHN1YlNsaWNlbm9MRE5hbWVKc29uW3N1YklkeF0uY29kZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGRpc3RCdG4uaW5uZXJUZXh0ID0gZGlzdE5hbWUuam9pbignLScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3RCdG4uc2V0QXR0cmlidXRlKFwiY2xhc3NcIiwgJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIHRhZ0J0bi5vbmNsaWNrID0gZnVuY3Rpb24oKXtcclxuICAgICAgICAvLyAgICAgLy8gZGF0YSA9IHtcIuWwj+aYjuWutlwiOltdLCBcIuWwj+e6ouWutlwiOltcIuWwj+e6oueIuOeIuFwiLCBcIuWwj+e6ouWmiOWmiFwiXX1cclxuICAgICAgICAvLyAgICAgLy8gY29uc29sZS5sb2coZmlsdGVyRGF0YXMuc3VwZXJ2aXNlVGFnKTtcclxuICAgICAgICAvLyAgICAgdmFyIHBpY2tlclZpZXcgPSBuZXcgUGlja2VyVmlldyh7XHJcbiAgICAgICAgLy8gICAgICAgICBiaW5kRWxlbTogdGFnQnRuLFxyXG4gICAgICAgIC8vICAgICAgICAgZGF0YTogdGFnUGlja2VyT3B0LFxyXG4gICAgICAgIC8vICAgICAgICAgdGl0bGU6ICfnm5HnrqHnsbvlnosnLFxyXG4gICAgICAgIC8vICAgICAgICAgbGVmdFRleHQ6ICflj5bmtognLFxyXG4gICAgICAgIC8vICAgICAgICAgcmlnaHRUZXh0OiAn56Gu5a6aJyxcclxuICAgICAgICAvLyAgICAgICAgIGdldEFqYXhEYXRhOiB0cnVlLFxyXG4gICAgICAgIC8vICAgICAgICAgYWpheEZuOiBmdW5jdGlvbihzZWxlY3RBcnIpIHtcclxuICAgICAgICAvLyAgICAgICAgICAgICAkLmVhY2goZmlsdGVyRGF0YXMuc3VwZXJ2aXNlVGFnLCBmdW5jdGlvbiAoaW5kZXgsIHZhbCkge1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICBpZiAodmFsLnBhcmFtTmFtZSA9PSBzZWxlY3RBcnJbMF0pIHtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIHRhZ1BpY2tlck9wdFt2YWwucGFyYW1OYW1lXSA9IFtdO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgYWpheE1pblRhZ09wdCh2YWwucGFyYW1OYW1lLCB2YWwucGFyYW1Db2RlKTtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIC8vICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgLy8gICAgICAgICB9LFxyXG4gICAgICAgIC8vICAgICAgICAgcmlnaHRGbjogZnVuY3Rpb24oc2VsZWN0QXJyKXtcclxuICAgICAgICAvLyAgICAgICAgICAgICBtaW5UYWdOYW1lID0gJyc7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgbWF4VGFnTmFtZSA9ICcnO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIG1heFRhZ0NvZGUgPSAnJztcclxuICAgICAgICAvLyAgICAgICAgICAgICBtaW5UYWdDb2RlID0gJyc7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgJC5lYWNoKGZpbHRlckRhdGFzLnN1cGVydmlzZVRhZywgZnVuY3Rpb24gKGlkeCwgdmFsKSB7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIGlmICh2YWwucGFyYW1OYW1lID09IHNlbGVjdEFyclswXSkge1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgbWF4VGFnQ29kZSA9IHZhbC5wYXJhbUNvZGU7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBtYXhUYWdOYW1lID0gdmFsLnBhcmFtTmFtZTtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIC8vICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICQuZWFjaChwcmVUYWdNaW5PcHQsIGZ1bmN0aW9uIChpZHgsIHZhbHVlKSB7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIGlmICh2YWx1ZS50YWdOYW1lID09IHNlbGVjdEFyclsxXSkge1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgbWluVGFnQ29kZSA9IHZhbHVlLnRhZ0NvZGU7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBtaW5UYWdOYW1lID0gdmFsdWUudGFnTmFtZTtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgIC8vICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgaWYgKHNlbGVjdEFyclsxXSkge1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAkKCcjdGFnLWJ0bicpLnRleHQobWluVGFnTmFtZSk7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICQoJyN0YWctYnRuJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICQoJyN0YWctYnRuJykudGV4dChtYXhUYWdOYW1lKTtcclxuICAgICAgICAvLyAgICAgICAgICAgICAgICAgJCgnI3RhZy1idG4nKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgfVxyXG4gICAgICAgIC8vICAgICAgICAgfVxyXG4gICAgICAgIC8vICAgICB9KTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgXHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGRyYXdNYXJla2VycygpIHtcclxuICAgICAgICAgICAgbWFya0RhdGFzLmZvckVhY2goZnVuY3Rpb24gKHZhbCwgaW5kZXgpIHtcclxuICAgICAgICAgICAgICAgIHZhciBwcmVTdGF0ZSA9IHZhbC5jaGVja1N0YXRlLCBtYXJrZXI7XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2gocHJlU3RhdGUpe1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCIxXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlciA9IEwubWFya2VyKFt2YWwubGF0LCB2YWwubG9uXSwge2RyYWdnYWJsZTogZmFsc2UsIG9wYWNpdHk6IDEsIGljb246IEwuZGl2SWNvbih7Y2xhc3NOYW1lOiAnZ3JlZW4tbWFya2VyJywgaHRtbDogJzxwPicgKyAoaW5kZXggKyAxKSArICc8L3A+J30pfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCIyXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmtlciA9IEwubWFya2VyKFt2YWwubGF0LCB2YWwubG9uXSwge2RyYWdnYWJsZTogZmFsc2UsIG9wYWNpdHk6IDEsIGljb246IEwuZGl2SWNvbih7Y2xhc3NOYW1lOiAnYmx1ZS1tYXJrZXInLCBodG1sOiAnPHA+JyArIChpbmRleCArIDEpICsgJzwvcD4nfSl9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIjNcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFya2VyID0gTC5tYXJrZXIoW3ZhbC5sYXQsIHZhbC5sb25dLCB7ZHJhZ2dhYmxlOiBmYWxzZSwgb3BhY2l0eTogMSwgaWNvbjogTC5kaXZJY29uKHtjbGFzc05hbWU6ICdyZWQtbWFya2VyJywgaHRtbDogJzxwPicgKyAoaW5kZXggKyAxKSArICc8L3A+J30pfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbWFya2Vycy5hZGRMYXllcihtYXJrZXIpO1xyXG4gICAgICAgICAgICAgICAgbWFya2VyLm9uKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoJChcIi5kZXRhaWxfaW5mb1wiKS5oYXNDbGFzcygnYWN0aXZlJykpIHsgXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQoXCIuZGV0YWlsX2luZm9cIikucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBpZHggPSBwYXJzZUludChlLm9yaWdpbmFsRXZlbnQudGFyZ2V0LnRleHRDb250ZW50KSAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgZ2V0QWRyZXNzSW5mbyhtYXJrRGF0YXNbaWR4XSk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiByZWR1Y3Rpb25NYXAoKSB7XHJcbiAgICAgICAgICAgIG1hcmtlcnMuY2xlYXJMYXllcnMoKTtcclxuICAgICAgICAgICAgbWFwLnNldFZpZXcoW051bWJlcihpbml0TGF0bG5nLmxhdCksIE51bWJlcihpbml0TGF0bG5nLmxvbildLCBpbml0Wm9vbSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBnZXRBZHJlc3NJbmZvIChlKSB7XHJcbiAgICAgICAgICAgIHZhciByZXZlcnNlUmVzb2x1dGlvblVybCA9IGVuY29kZVVSSShcImh0dHBzOi8vZGguZGl0dS56ai5jbjo5NDQzL2ludmVyc2UvZ2V0SW52ZXJzZUdlb2NvZGluZy5qc29ucD8mZGV0YWlsPTEmem9vbT0xMSZsYXRsb249XCIgKyBlLmxvbiArIFwiLFwiICsgZS5sYXQgKyBcIiZsYXQ9Jmxvbj0mY3VzdG9tZXI9MlwiKTtcclxuICAgICAgICAgICAgJC5hamF4KHtcclxuICAgICAgICAgICAgICAgIHVybDogcmV2ZXJzZVJlc29sdXRpb25VcmwsXHJcbiAgICAgICAgICAgICAgICBkYXRhVHlwZTogXCJqc29ucFwiLFxyXG4gICAgICAgICAgICAgICAgLy8ganNvbnA6IFwiY2FsbGJhY2tcIixcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBsb2NhdGlvbiA9IHJlcy5jaXR5LnZhbHVlICsgcmVzLmRpc3QudmFsdWUgKyByZXMudG93bi52YWx1ZSArIHJlcy5wb2k7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5sZWdhbEVudGl0eV9uYW1lXCIpLnRleHQoZS5sZWdhbEVudGl0eU5hbWUpXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5sZWdhbFJlcF9uYW1lXCIpLnRleHQoZS5sZWdhbFJlcClcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmxlZ2FsUmVwX3RlbFwiKS50ZXh0KGUudGVsKVxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuYWRkcmVzc19pbmZvXCIpLnRleHQobG9jYXRpb24pXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5kaXN0YW5jZV9pbmZvXCIpLnRleHQoKHBhcnNlSW50KGUuZGlzdGFuY2UpIC8gMTAwMCkudG9GaXhlZCgyKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5jYWxsX3RlbFwiKS5kYXRhKFwidGVsXCIsIGUudGVsKTtcclxuICAgICAgICAgICAgICAgICAgICBtYXBQYXJhbXMgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvbmdpdHVkZTogZS5sb24sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxhdGl0dWRlOiBlLmxhdCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogcmVzLnBvaSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWRkcmVzczogcmVzLnBvaSxcclxuICAgICAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgICAgICQoXCIuZGV0YWlsX2luZm9cIikuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGQuYWxlcnQoeyBjb250ZW50OiBcIuWcsOWdgOino+aekOWHuumUmVwiIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9Il0sInNvdXJjZVJvb3QiOiIifQ==