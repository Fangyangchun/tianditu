!function(e){var t={};function a(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=t,a.d=function(e,t,i){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(a.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)a.d(i,n,function(t){return e[t]}.bind(null,n));return i},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="./",a(a.s=0)}([function(e,t){navigator.userAgent.toLowerCase().indexOf("dingtalk")>-1&&document.writeln('<script src="https://appx/web-view.min.js"><\/script>');var a,i,n,s,o,r,c,l,d,u,m,p,v,f,g,y,b,C,h,k,T,_=10,x=[],S=[],A=[],E=[],j=[],w=document.getElementById("picker-btn"),I=document.getElementById("district-btn");function P(){m={},$.each(c.DistrictJson,function(e,t){var a=t.name;m[a]=["全部"],t.children&&$.each(t.children,function(e,t){m[a].push(t.name)})})}function D(){x.forEach(function(e,t){var a;switch(e.checkState){case"1":a=L.marker([e.lat,e.lon],{draggable:!1,opacity:1,icon:L.divIcon({className:"green-marker",html:"<p>"+(t+1)+"</p>"})});break;case"2":a=L.marker([e.lat,e.lon],{draggable:!1,opacity:1,icon:L.divIcon({className:"blue-marker",html:"<p>"+(t+1)+"</p>"})});break;case"3":a=L.marker([e.lat,e.lon],{draggable:!1,opacity:1,icon:L.divIcon({className:"red-marker",html:"<p>"+(t+1)+"</p>"})})}s.addLayer(a),a.on("click",function(e){$(".detail_info").hasClass("active")&&$(".detail_info").removeClass("active"),r=parseInt(e.originalEvent.target.textContent)-1,function(e){var t=encodeURI("https://dh.ditu.zj.cn:9443/inverse/getInverseGeocoding.jsonp?&detail=1&zoom=11&latlon="+e.lon+","+e.lat+"&lat=&lon=&customer=2");$.ajax({url:t,dataType:"jsonp",success:function(t){var a=t.city.value+t.dist.value+t.town.value+t.poi;$(".legalEntity_name").text(e.legalEntityName),$(".legalRep_name").text(e.legalRep),$(".legalRep_tel").text(e.tel),$(".address_info").text(a),$(".distance_info").text((parseInt(e.distance)/1e3).toFixed(2)),$(".call_tel").data("tel",e.tel),o={longitude:e.lon,latitude:e.lat,name:t.poi,address:t.poi},$(".detail_info").addClass("active")},error:function(e){dd.alert({content:"地址解析出错"})}})}(x[r])})})}dd.postMessage({type:"init"}),dd.onMessage=function(e){a={lon:e.lon,lat:e.lat}||{lon:120.14989,lat:30.27751},S=e.cityName||"杭州市",x=e.markDatas,c=e.filterDatas,l=e.userLevel,d=e.showDistrict,e.init||l&&d&&(I.style.display="inline-block",P()),function(e){if(e)return void function(){i=L.map("map",{crs:L.CRS.CustomEPSG4326,center:a,minZoom:5,zoom:_,inertiaDeceleration:15e3,zoomControl:!1});var e=new L.GXYZ("https://ditu.zjzwfw.gov.cn/mapserver/vmap/zjvmap/getMAP?x={x}&y={y}&l={z}&styleId=tdt_biaozhunyangshi_2017",{tileSize:512,minZoom:5});i.addLayer(e);var t=new L.GXYZ("https://ditu.zjzwfw.gov.cn/mapserver/label/zjvmap/getImg?x={x}&y={y}&l={z}&styleId=tdt_biaozhunyangshi_2017",{tileSize:512,hitDetection:!0,keepBuffer:0,updateWhenZooming:!1});i.addLayer(t);var n=L.icon({iconUrl:"../img/indoor_pub_poi_pressed.png",iconSize:[21,30],iconAnchor:[10,20]}),o=L.marker([i.getCenter().lat,i.getCenter().lng],{draggable:!1,opacity:1,icon:n});i.addLayer(o),s=L.markerClusterGroup(),D(),i.addLayer(s),$(".whiteBtn").addClass("active"),$(".check_title").text($(".whiteBtn").data("title")).fadeIn(),function(){var e="",t="",a="",i="";$.each(c.marketType,function(t,a){e+='<dd data-paramCode="'+a.paramCode+'" data-paramCodeType="'+a.paramCodeType+'">'+a.paramName+"</dd>"}),$.each(c.checkType,function(e,a){t+='<dd data-paramCode="'+a.paramCode+'" data-paramCodeType="'+a.paramCodeType+'">'+a.paramName+"</dd>"}),$.each(c.taskStatus,function(e,t){a+='<dd data-paramCode="'+t.paramCode+'" data-paramCodeType="'+t.paramCodeType+'">'+t.paramName+"</dd>"}),$.each(c.superviseTag,function(e,t){i+='<dd data-paramCode="'+t.paramCode+'" data-paramCode1="'+t.paramCode1+'" data-paramCode2="'+t.paramCode2+'" data-paramCodeType="'+t.paramCodeType+'">'+t.paramName+"</dd>"}),$("#MARKET_TYPE").html(e),$("#TASK_TYPE").html(t),$("#TASK_STATUS").html(a),$("#SUPERVISE_TAG").html(i),$(".filter_list dd").on("click",function(e){$(this).siblings().removeClass("active"),$(this).addClass("active");var t=$(e.target)[0].dataset.paramcodetype;switch(t){case"MARKET_TYPE":f=$(e.target)[0].dataset.paramcode;break;case"TASK_TYPE":y=$(e.target)[0].dataset.paramcode;break;case"TASK_STATUS":p=$(e.target)[0].dataset.paramcode;break;case"SUPERVISE_TAG_LARGECLASS":C=$(e.target)[0].dataset.paramcode,h=$(e.target)[0].dataset.paramcode1,k=$(e.target)[0].dataset.paramcode2}})}(),l?(w.style.display="inline-block",u={},$.each(c.SlicenoLDNameJson,function(e,t){var a=t.name;u[a]=[],t.children&&$.each(t.children,function(e,t){u[a].push(t.name)})})):(I.style.display="inline-block",P());i.on("click",function(e){$(".detail_info").hasClass("active")&&$(".detail_info").removeClass("active")})}();s.clearLayers(),i.setView([Number(a.lat),Number(a.lon)],_),D()}(e.init)},$(".filterBtn").on("click",function(){$(".custom-mask").addClass("custom-mask--visible"),$(".custom-container").addClass("custom-container--visible"),$(".custom-container li").addClass("active")}),$(".custom-mask").on("click",function(){$(".custom-mask").removeClass("custom-mask--visible"),$(".floating_box").hasClass("active")?($(".floating_box").removeClass("active"),$(".filter_list_box").removeClass("active")):($(".custom-container").removeClass("custom-container--visible"),$(".custom-container li").removeClass("active"))}),$(".custom-container").on("click",function(e){$(".custom-mask").removeClass("custom-mask--visible"),$(".custom-container").removeClass("custom-container--visible"),$(".custom-container li").removeClass("active");var t=$(e.target).data("metter");""==t?$(".filterBtn span").html('不限<i class="icon-arrow"></i>'):$(".filterBtn span").html(t+'<i class="icon-arrow"></i>'),dd.postMessage({type:"distance",val:t})}),$(".floating_box").on("click",function(e){if($(this).addClass("active"),$(".custom-mask").addClass("custom-mask--visible"),$(".filter_list_box").addClass("active"),v){$("#TASK_STATUS dd").removeClass("active");var t=jQuery.makeArray($("#TASK_STATUS dd"));$.each(t,function(e,t){if(t.dataset.paramcode==p)return $(t).addClass("active"),!0})}else $("#TASK_STATUS dd").removeClass("active");if(A.length>0||j.length>0?l?($("#picker-btn").text(S.join("-")),$("#picker-btn").addClass("active"),E&&($("#district-btn").text(E.join("-")),$("#district-btn").addClass("active"))):($("#district-btn").text(E.join("-")),$("#district-btn").addClass("active")):l?($("#picker-btn").text("市|区|县"),$("#picker-btn").removeClass("active"),$("#district-btn").text("商圈/片区"),$("#district-btn").removeClass("active"),$("#district-btn").css("display","none")):($("#district-btn").text("商圈/片区"),$("#district-btn").removeClass("active")),g){$("#MARKET_TYPE dd").removeClass("active");t=jQuery.makeArray($("#MARKET_TYPE dd"));$.each(t,function(e,t){if(t.dataset.paramcode==f)return $(t).addClass("active"),!0})}else $("#MARKET_TYPE dd").removeClass("active");if(b){$("#TASK_TYPE dd").removeClass("active");t=jQuery.makeArray($("#TASK_TYPE dd"));$.each(t,function(e,t){if(t.dataset.paramcode==y)return $(t).addClass("active"),!0})}else $("#TASK_TYPE dd").removeClass("active");if(T){$("#SUPERVISE_TAG dd").removeClass("active");t=jQuery.makeArray($("#SUPERVISE_TAG dd"));$.each(t,function(e,t){if(t.dataset.paramcode==C)return $(t).addClass("active"),!0})}else $("#SUPERVISE_TAG dd").removeClass("active")}),$(".custom-mask").on("touchmove",function(e){e.preventDefault()}),$(".custom-container").on("touchmove",function(e){e.preventDefault()}),$(".iptSearch").on("keydown",function(e){13==e.keyCode&&dd.postMessage({type:"keyword",val:e.target.value||""})}),$(".btn_handler_box li").on("click",function(e){var t=$(e.target).data("filter"),o=$(e.target).data("title");return $(this).closest("li").addClass("active").siblings().removeClass("active"),""==t||"1"==t||"2"==t||"3"==t?($(".check_title").text(o).fadeIn(),void dd.postMessage({type:"checkState",val:t})):"reset"==t?($(".check_title").fadeOut(),s.clearLayers(),i.setView([Number(a.lat),Number(a.lon)],_),n=L.circle([i.getCenter().lat,i.getCenter().lng],{radius:30}),void i.addLayer(n)):void 0}),$(".call_tel").on("click",function(){var e=$(".call_tel").data("tel");dd.postMessage({type:"callPhone",val:e})}),$(".menu_icon_3").on("click",function(){dd.postMessage({type:"openMap",val:o})}),$(".detail").on("click",function(){dd.postMessage({type:"detail",val:r})}),$(".gocheck").on("click",function(){dd.postMessage({type:"gocheck",val:r})}),$(".unfind").on("click",function(){dd.postMessage({type:"unfind",val:r})}),$(".reset_btn").on("click",function(){[],E=[],j=[],S=[],A=[],$("#picker-btn").text("市|区|县"),$("#district-btn").text("商圈/片区"),l?($("#picker-btn").removeClass("active"),$("#district-btn").removeClass("active"),$("#district-btn").css("display","none")):$("#district-btn").removeClass("active"),$(".filter_type dd").removeClass("active"),$(".custom-mask").removeClass("custom-mask--visible"),$(".floating_box").removeClass("active"),$(".filter_list_box").removeClass("active"),v="",g="",b="",T="","","","";dd.postMessage({type:"businessDistrict",val:{taskStatus:"",businessDistrict:"",legalEntityCata:"",checkType:"",legalEntityTag:"",legalEntityTag1:"",legalEntityTag2:"",localAdm:""}})}),$(".confirm_btn").on("click",function(){var e={taskStatus:v=p||"",legalEntityCata:g=f||"",checkType:b=y||"",legalEntityTag:T=C||"",legalEntityTag1:h||"",legalEntityTag2:k||""};1==A.length?(e.localAdm=A[0],e.businessDistrict=""):0==j.length?(e.localAdm=A[0],e.businessDistrict=""):(e.localAdm=j[0],e.businessDistrict=j[1]||""),$(".custom-mask").removeClass("custom-mask--visible"),$(".floating_box").removeClass("active"),$(".filter_list_box").removeClass("active"),dd.postMessage({type:"businessDistrict",val:e})}),w.onclick=function(){new PickerView({bindElem:w,data:u,title:"市|区|县",leftText:"取消",rightText:"确定",getAjaxData:!1,ajaxFn:function(e){$.ajax({url:encodeURI("http://192.168.5.107:8080//superviseTag/selectSuperviseTagListByTagLargeCode"),data:{token:"",userId:"",tagLargeCategory:""},dataType:"json",success:function(e){(void 0).latitude=parseFloat(e.latlon.split(",")[1]),(void 0).longitude=parseFloat(e.latlon.split(",")[0]),(void 0).location=e.city.value+e.dist.value+e.town.value+e.poi},error:function(e){dd.alert({content:"地址解析出错"})}})},rightFn:function(e){var t;S=[],A=[];var a=c.SlicenoLDNameJson.findIndex(function(t){return t.name==e[0]});A.push(c.SlicenoLDNameJson[a].code),S=e;var i=(t=c.SlicenoLDNameJson[a].children).findIndex(function(t){return t.name==e[1]});A.push(t[i].code),w.innerText=S.join("-"),w.setAttribute("class","active"),I.innerText="商圈/片区",I.style.display="none",I.setAttribute("class",""),E=[],j=[],dd.postMessage({type:"showDistrict",val:{localAdm:A[A.length-1],selAll:!1}})}})},I.onclick=function(){new PickerView({bindElem:I,data:m,title:"商圈/片区",leftText:"取消",rightText:"确定",getAjaxData:!1,ajaxFn:function(e){$.ajax({url:encodeURI("http://192.168.5.107:8080/superviseTag/selectSuperviseTagListByTagLargeCode"),data:{userId:"",token:"",tagLargeCategory:""},dataType:"json",success:function(e){(void 0).latitude=parseFloat(e.latlon.split(",")[1]),(void 0).longitude=parseFloat(e.latlon.split(",")[0]),(void 0).location=e.city.value+e.dist.value+e.town.value+e.poi},error:function(e){dd.alert({content:"地址解析出错"})}})},rightFn:function(e){var t;E=[],j=[];var a=c.DistrictJson.findIndex(function(t){return t.name==e[0]});if(j.push(c.DistrictJson[a].code),"全部"!=e[1]){E=e;var i=(t=c.DistrictJson[a].children).findIndex(function(t){return t.name==e[1]});j.push(t[i].code)}else E.push(e[0]);I.innerText=E.join("-"),I.setAttribute("class","active")}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vanMvY2hlY2ttYXAuanMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ0b0xvd2VyQ2FzZSIsImluZGV4T2YiLCJkb2N1bWVudCIsIndyaXRlbG4iLCJpbml0TGF0bG5nIiwibWFwIiwiY2lyY2xlIiwibWFya2VycyIsIm1hcFBhcmFtcyIsImlkeCIsImZpbHRlckRhdGFzIiwidXNlckxldmVsIiwic2hvd0Rpc3RyaWN0IiwicGlja2VyT3B0IiwiZGlzdFBpY2tlck9wdCIsInRhc2tTdGF0dXMiLCJjdXJUYXNrU3RhdHVzIiwibGVnYWxFbnRpdHlDYXRhIiwiY3VyTGVnYWxFbnRpdHlDYXRhIiwiY2hlY2tUeXBlIiwiY3VyQ2hlY2tUeXBlIiwibGVnYWxFbnRpdHlUYWciLCJsZWdhbEVudGl0eVRhZzEiLCJsZWdhbEVudGl0eVRhZzIiLCJjdXJMZWdhbEVudGl0eVRhZyIsImluaXRab29tIiwibWFya0RhdGFzIiwiY2l0eU5hbWUiLCJjaXR5Q29kZSIsImRpc3ROYW1lIiwiZGlzdENvZGUiLCJidG4iLCJnZXRFbGVtZW50QnlJZCIsImRpc3RCdG4iLCJnZXREaXN0UGlja2VyT3B0IiwiJCIsImVhY2giLCJEaXN0cmljdEpzb24iLCJpbmRleCIsInZhbCIsImlkeEtleSIsImNoaWxkcmVuIiwicHVzaCIsImRyYXdNYXJla2VycyIsImZvckVhY2giLCJtYXJrZXIiLCJjaGVja1N0YXRlIiwiTCIsImxhdCIsImxvbiIsImRyYWdnYWJsZSIsIm9wYWNpdHkiLCJpY29uIiwiZGl2SWNvbiIsImNsYXNzTmFtZSIsImh0bWwiLCJhZGRMYXllciIsIm9uIiwiZSIsImhhc0NsYXNzIiwicmVtb3ZlQ2xhc3MiLCJwYXJzZUludCIsIm9yaWdpbmFsRXZlbnQiLCJ0YXJnZXQiLCJ0ZXh0Q29udGVudCIsInJldmVyc2VSZXNvbHV0aW9uVXJsIiwiZW5jb2RlVVJJIiwiYWpheCIsInVybCIsImRhdGFUeXBlIiwic3VjY2VzcyIsInJlcyIsImxvY2F0aW9uIiwiY2l0eSIsImRpc3QiLCJ0b3duIiwicG9pIiwidGV4dCIsImxlZ2FsRW50aXR5TmFtZSIsImxlZ2FsUmVwIiwidGVsIiwiZGlzdGFuY2UiLCJ0b0ZpeGVkIiwiZGF0YSIsImxvbmdpdHVkZSIsImxhdGl0dWRlIiwiYWRkcmVzcyIsImFkZENsYXNzIiwiZXJyb3IiLCJlcnIiLCJkZCIsImFsZXJ0IiwiY29udGVudCIsImdldEFkcmVzc0luZm8iLCJwb3N0TWVzc2FnZSIsInR5cGUiLCJvbk1lc3NhZ2UiLCJpbml0Iiwic3R5bGUiLCJkaXNwbGF5IiwiY3JzIiwiQ1JTIiwiQ3VzdG9tRVBTRzQzMjYiLCJjZW50ZXIiLCJtaW5ab29tIiwiem9vbSIsImluZXJ0aWFEZWNlbGVyYXRpb24iLCJ6b29tQ29udHJvbCIsImxheWVyIiwiR1hZWiIsInRpbGVTaXplIiwibGFiZWxMYXllciIsImhpdERldGVjdGlvbiIsImtlZXBCdWZmZXIiLCJ1cGRhdGVXaGVuWm9vbWluZyIsImN1c3RvbUljb24iLCJpY29uVXJsIiwiaWNvblNpemUiLCJpY29uQW5jaG9yIiwiY3VyTWFya2VyIiwiZ2V0Q2VudGVyIiwibG5nIiwibWFya2VyQ2x1c3Rlckdyb3VwIiwiZmFkZUluIiwibWFya2V0SHRtbCIsInR5cGVIdG1sIiwic3RhdHVzSHRtbCIsInRhZ0h0bWwiLCJtYXJrZXRUeXBlIiwicGFyYW1Db2RlIiwicGFyYW1Db2RlVHlwZSIsInBhcmFtTmFtZSIsInN1cGVydmlzZVRhZyIsInBhcmFtQ29kZTEiLCJwYXJhbUNvZGUyIiwiZXYiLCJ0aGlzIiwic2libGluZ3MiLCJkYXRhc2V0IiwicGFyYW1jb2RldHlwZSIsInBhcmFtY29kZSIsInBhcmFtY29kZTEiLCJwYXJhbWNvZGUyIiwiaW5pdEZpbHRlckh0bWwiLCJTbGljZW5vTEROYW1lSnNvbiIsImNsZWFyTGF5ZXJzIiwic2V0VmlldyIsIk51bWJlciIsImRyYXdNYXAiLCJtZXR0ZXIiLCJhcnIiLCJqUXVlcnkiLCJtYWtlQXJyYXkiLCJsZW5ndGgiLCJqb2luIiwiY3NzIiwicHJldmVudERlZmF1bHQiLCJrZXlDb2RlIiwiZmlsdGVyIiwidGl0bGUiLCJjbG9zZXN0IiwiZmFkZU91dCIsInJhZGl1cyIsInBob25lTnVtIiwiYnVzaW5lc3NEaXN0cmljdCIsImxvY2FsQWRtIiwicHJlRmlsdGVyRGF0YSIsIm9uY2xpY2siLCJQaWNrZXJWaWV3IiwiYmluZEVsZW0iLCJsZWZ0VGV4dCIsInJpZ2h0VGV4dCIsImdldEFqYXhEYXRhIiwiYWpheEZuIiwidG9rZW4iLCJ1c2VySWQiLCJ0YWdMYXJnZUNhdGVnb3J5IiwibmV3Q2VudGVyRGF0YSIsInBhcnNlRmxvYXQiLCJsYXRsb24iLCJzcGxpdCIsInJpZ2h0Rm4iLCJzZWxlY3RBcnIiLCJzdWJTbGljZW5vTEROYW1lSnNvbiIsImZpcnN0SWR4IiwiZmluZEluZGV4Iiwib2JqIiwiY29kZSIsInN1YklkeCIsImlubmVyVGV4dCIsInNldEF0dHJpYnV0ZSIsInNlbEFsbCJdLCJtYXBwaW5ncyI6ImFBQ0EsSUFBQUEsS0FHQSxTQUFBQyxFQUFBQyxHQUdBLEdBQUFGLEVBQUFFLEdBQ0EsT0FBQUYsRUFBQUUsR0FBQUMsUUFHQSxJQUFBQyxFQUFBSixFQUFBRSxJQUNBRyxFQUFB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QTZKLGFBQUEiLCJmaWxlIjoianMvY2hlY2ttYXAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIi4vXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAwKTtcbiIsIlxyXG4gICAgICAgIGlmIChuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZignZGluZ3RhbGsnKSA+IC0xKSB7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LndyaXRlbG4oJzxzY3JpcHQgc3JjPVwiaHR0cHM6Ly9hcHB4L3dlYi12aWV3Lm1pbi5qc1wiJyArICc+JyArICc8JyArICcvJyArICdzY3JpcHQ+Jyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBpbml0TGF0bG5nLCBpbml0Wm9vbSA9IDEwLCBjaXR5TmFtZSwgbmV3Q2VudGVyRGF0YSwgIG1hcmtEYXRhcyA9IFtdLFxyXG4gICAgICAgIG1hcCwgY3VyTWFya2VyLCBjaXJjbGUsIG1hcmtlcnMsIG1hcFBhcmFtcywgaWR4LCBmaWx0ZXJEYXRhcywgdXNlckxldmVsLCBzaG93RGlzdHJpY3QsIHBpY2tlck9wdCwgZGlzdFBpY2tlck9wdDtcclxuICAgICAgICB2YXIgdGFza1N0YXR1cywgY3VyVGFza1N0YXR1cywgbGVnYWxFbnRpdHlDYXRhLCBjdXJMZWdhbEVudGl0eUNhdGEsIGNoZWNrVHlwZSwgY3VyQ2hlY2tUeXBlLCBcclxuICAgICAgICBsZWdhbEVudGl0eVRhZywgbGVnYWxFbnRpdHlUYWcxLCBsZWdhbEVudGl0eVRhZzIsIGN1ckxlZ2FsRW50aXR5VGFnLCBjdXJMZWdhbEVudGl0eVRhZzEsIGN1ckxlZ2FsRW50aXR5VGFnMixcclxuICAgICAgICBjaXR5TmFtZSA9IFtdLCBjaXR5Q29kZSA9IFtdLCBkaXN0TmFtZSA9IFtdLCBkaXN0Q29kZSA9IFtdLCBhcmVhTmFtZSA9IFtdLCBhcmVhQ29kZSA9IFtdLCBjdXJyZW50QXJlYUNvZGU7IFxyXG4gICAgICAgIHZhciBidG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInBpY2tlci1idG5cIik7XHJcbiAgICAgICAgdmFyIGRpc3RCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRpc3RyaWN0LWJ0blwiKTtcclxuICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ2luaXQnfSk7XHJcbiAgICAgICAgZGQub25NZXNzYWdlID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICBpbml0TGF0bG5nID0ge2xvbjogZS5sb24sIGxhdDogZS5sYXR9IHx8IHtsb246IDEyMC4xNDk4OSwgbGF0OiAzMC4yNzc1MX07ICAvLyDpu5jorqTnu4/nuqzluqbkuLrok53lpKnllYbliqHkuK3lv4NcclxuICAgICAgICAgICAgY2l0eU5hbWUgPSBlLmNpdHlOYW1lIHx8IFwi5p2t5bee5biCXCI7XHJcbiAgICAgICAgICAgIG1hcmtEYXRhcyA9IGUubWFya0RhdGFzO1xyXG4gICAgICAgICAgICBmaWx0ZXJEYXRhcyA9IGUuZmlsdGVyRGF0YXM7XHJcbiAgICAgICAgICAgIHVzZXJMZXZlbCA9IGUudXNlckxldmVsO1xyXG4gICAgICAgICAgICBzaG93RGlzdHJpY3QgPSBlLnNob3dEaXN0cmljdDtcclxuICAgICAgICAgICAgaWYgKCFlLmluaXQpIHtcclxuICAgICAgICAgICAgICAgIGlmICh1c2VyTGV2ZWwgJiYgc2hvd0Rpc3RyaWN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdEJ0bi5zdHlsZS5kaXNwbGF5ID0gICdpbmxpbmUtYmxvY2snO1xyXG4gICAgICAgICAgICAgICAgICAgIGdldERpc3RQaWNrZXJPcHQoKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRyYXdNYXAoZS5pbml0KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZnVuY3Rpb24gZHJhd01hcChlKSB7XHJcbiAgICAgICAgICAgIGlmIChlKSB7XHJcbiAgICAgICAgICAgICAgICBpbml0KCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47IFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlZHVjdGlvbk1hcCgpXHJcbiAgICAgICAgICAgIGRyYXdNYXJla2VycygpXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBpbml0KCkge1xyXG4gICAgICAgICAgICBtYXAgPSBMLm1hcCgnbWFwJyx7Y3JzOkwuQ1JTLkN1c3RvbUVQU0c0MzI2LGNlbnRlcjogaW5pdExhdGxuZywgbWluWm9vbTogNSwgem9vbTogaW5pdFpvb20sIGluZXJ0aWFEZWNlbGVyYXRpb246MTUwMDAsIHpvb21Db250cm9sOiBmYWxzZX0pO1xyXG4gICAgICAgICAgICB2YXIgdGlsZUFkZHJlc3MgPSAnaHR0cHM6Ly9kaXR1Lnpqendmdy5nb3YuY24vbWFwc2VydmVyL3ZtYXAvemp2bWFwL2dldE1BUD94PXt4fSZ5PXt5fSZsPXt6fSZzdHlsZUlkPXRkdF9iaWFvemh1bnlhbmdzaGlfMjAxNyc7XHJcblxyXG4gICAgICAgICAgICB2YXIgbGF5ZXIgPSBuZXcgTC5HWFlaKHRpbGVBZGRyZXNzLCB7dGlsZVNpemU6NTEyLCBtaW5ab29tOiA1fSk7XHJcbiAgICAgICAgICAgIG1hcC5hZGRMYXllcihsYXllcik7XHJcblxyXG4gICAgICAgICAgICAvLyDmt7vliqDms6jorrDlm77lsYJcclxuICAgICAgICAgICAgLy8gdmFyIGxhYmVsTGF5ZXIgPSBuZXcgTC5HV1ZUQW5ubyh7dGlsZVNpemU6NTEyfSk7XHJcbiAgICAgICAgICAgIC8vIHZhciBkYXRhU291cmNlID0gbmV3IEN1c3RvbS5VUkxEYXRhU291cmNlKCk7XHJcbiAgICAgICAgICAgIC8vIGRhdGFTb3VyY2UudXJsID0gJ2h0dHBzOi8vZGl0dS56anp3ZncuZ292LmNuL21hcHNlcnZlci9sYWJlbC96anZtYXAvZ2V0RGF0YXM/eD0ke3h9Jnk9JHt5fSZsPSR7en0mc3R5bGVJZD10ZHRfYmlhb3podW55YW5nc2hpXzIwMTcnO1xyXG4gICAgICAgICAgICAvLyBsYWJlbExheWVyLmFkZERhdGFTb3VyY2UoZGF0YVNvdXJjZSk7XHJcbiAgICAgICAgICAgIC8vIG1hcC5hZGRMYXllcihsYWJlbExheWVyKTtcclxuICAgICAgICAgICAgdmFyIGxhYmVsTGF5ZXIgPSBuZXcgTC5HWFlaKCdodHRwczovL2RpdHUuemp6d2Z3Lmdvdi5jbi9tYXBzZXJ2ZXIvbGFiZWwvemp2bWFwL2dldEltZz94PXt4fSZ5PXt5fSZsPXt6fSZzdHlsZUlkPXRkdF9iaWFvemh1bnlhbmdzaGlfMjAxNycse3RpbGVTaXplOjUxMixoaXREZXRlY3Rpb246dHJ1ZSxrZWVwQnVmZmVyOjAsdXBkYXRlV2hlblpvb21pbmc6ZmFsc2V9KTtcclxuICAgICAgICAgICAgbWFwLmFkZExheWVyKGxhYmVsTGF5ZXIpO1xyXG4gICAgICAgICAgICB2YXIgY3VzdG9tSWNvbiA9IEwuaWNvbih7IFxyXG4gICAgICAgICAgICAgICAgaWNvblVybDogJy4uL2ltZy9pbmRvb3JfcHViX3BvaV9wcmVzc2VkLnBuZycsXHJcbiAgICAgICAgICAgICAgICBpY29uU2l6ZTogWzIxLCAzMF0sXHJcbiAgICAgICAgICAgICAgICBpY29uQW5jaG9yOiAgIFsxMCwgMjBdLFxyXG4gICAgICAgICAgICB9KTsgXHJcbiAgICAgICAgICAgIHZhciBjdXJNYXJrZXIgPSBMLm1hcmtlciggXHJcbiAgICAgICAgICAgICAgICBbbWFwLmdldENlbnRlcigpLmxhdCwgbWFwLmdldENlbnRlcigpLmxuZ10sIFxyXG4gICAgICAgICAgICAgICAgeyBcclxuICAgICAgICAgICAgICAgICAgICBkcmFnZ2FibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgaWNvbjogY3VzdG9tSWNvblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICBtYXAuYWRkTGF5ZXIoY3VyTWFya2VyKTtcclxuXHJcbiAgICAgICAgICAgIG1hcmtlcnMgPSBMLm1hcmtlckNsdXN0ZXJHcm91cCgpO1xyXG4gICAgICAgICAgICBkcmF3TWFyZWtlcnMoKTtcclxuICAgICAgICAgICAgbWFwLmFkZExheWVyKG1hcmtlcnMpO1xyXG5cclxuICAgICAgICAgICAgJCgnLndoaXRlQnRuJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAkKCcuY2hlY2tfdGl0bGUnKS50ZXh0KCQoJy53aGl0ZUJ0bicpLmRhdGEoJ3RpdGxlJykpLmZhZGVJbigpO1xyXG4gICAgICAgICAgICBpbml0RmlsdGVySHRtbCgpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgaWYgKHVzZXJMZXZlbCkge1xyXG4gICAgICAgICAgICAgICAgYnRuLnN0eWxlLmRpc3BsYXkgPSAnaW5saW5lLWJsb2NrJztcclxuICAgICAgICAgICAgICAgIGdldFBpY2tlck9wdCgpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZGlzdEJ0bi5zdHlsZS5kaXNwbGF5ID0gJ2lubGluZS1ibG9jayc7XHJcbiAgICAgICAgICAgICAgICBnZXREaXN0UGlja2VyT3B0KCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIG1hcC5vbignY2xpY2snLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAgICAgaWYoJChcIi5kZXRhaWxfaW5mb1wiKS5oYXNDbGFzcygnYWN0aXZlJykpIHsgXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5kZXRhaWxfaW5mb1wiKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBnZXRQaWNrZXJPcHQoKSB7XHJcbiAgICAgICAgICAgIHBpY2tlck9wdCA9IHt9O1xyXG4gICAgICAgICAgICAkLmVhY2goZmlsdGVyRGF0YXMuU2xpY2Vub0xETmFtZUpzb24sIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgaWR4S2V5ID0gdmFsLm5hbWU7XHJcbiAgICAgICAgICAgICAgICAvLyBwaWNrZXJPcHRbaWR4S2V5XSA9IFsn5YWo6YOoJ107XHJcbiAgICAgICAgICAgICAgICBwaWNrZXJPcHRbaWR4S2V5XSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgaWYgKHZhbC5jaGlsZHJlbikge1xyXG4gICAgICAgICAgICAgICAgICAgICQuZWFjaCh2YWwuY2hpbGRyZW4sIGZ1bmN0aW9uIChpZHgsIHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBpY2tlck9wdFtpZHhLZXldLnB1c2godmFsdWUubmFtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGdldERpc3RQaWNrZXJPcHQoKSB7XHJcbiAgICAgICAgICAgIGRpc3RQaWNrZXJPcHQgPSB7fTtcclxuICAgICAgICAgICAgJC5lYWNoKGZpbHRlckRhdGFzLkRpc3RyaWN0SnNvbiwgZnVuY3Rpb24gKGluZGV4LCB2YWwpIHtcclxuICAgICAgICAgICAgICAgIHZhciBpZHhLZXkgPSB2YWwubmFtZTtcclxuICAgICAgICAgICAgICAgIGRpc3RQaWNrZXJPcHRbaWR4S2V5XSA9IFsn5YWo6YOoJ107XHJcbiAgICAgICAgICAgICAgICAvLyBkaXN0UGlja2VyT3B0W2lkeEtleV0gPSBbXTtcclxuICAgICAgICAgICAgICAgIGlmICh2YWwuY2hpbGRyZW4pIHtcclxuICAgICAgICAgICAgICAgICAgICAkLmVhY2godmFsLmNoaWxkcmVuLCBmdW5jdGlvbiAoaWR4LCB2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXN0UGlja2VyT3B0W2lkeEtleV0ucHVzaCh2YWx1ZS5uYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgZnVuY3Rpb24gaW5pdEZpbHRlckh0bWwgKCkge1xyXG4gICAgICAgICAgICB2YXIgbWFya2V0SHRtbCA9ICcnLCB0eXBlSHRtbCA9ICcnLCBzdGF0dXNIdG1sID0gJycsIHRhZ0h0bWwgPSAnJztcclxuICAgICAgICAgICAgJC5lYWNoKGZpbHRlckRhdGFzLm1hcmtldFR5cGUsIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgICAgICBtYXJrZXRIdG1sICs9ICc8ZGQgZGF0YS1wYXJhbUNvZGU9XCInICsgdmFsLnBhcmFtQ29kZSArICdcIiBkYXRhLXBhcmFtQ29kZVR5cGU9XCInICsgdmFsLnBhcmFtQ29kZVR5cGUgKyAnXCI+JyArIHZhbC5wYXJhbU5hbWUgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJC5lYWNoKGZpbHRlckRhdGFzLmNoZWNrVHlwZSwgZnVuY3Rpb24gKGluZGV4LCB2YWwpIHtcclxuICAgICAgICAgICAgICAgIHR5cGVIdG1sICs9ICc8ZGQgZGF0YS1wYXJhbUNvZGU9XCInICsgdmFsLnBhcmFtQ29kZSArICdcIiBkYXRhLXBhcmFtQ29kZVR5cGU9XCInICsgdmFsLnBhcmFtQ29kZVR5cGUgKyAnXCI+JyArIHZhbC5wYXJhbU5hbWUgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJC5lYWNoKGZpbHRlckRhdGFzLnRhc2tTdGF0dXMsIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgICAgICBzdGF0dXNIdG1sICs9ICc8ZGQgZGF0YS1wYXJhbUNvZGU9XCInICsgdmFsLnBhcmFtQ29kZSArICdcIiBkYXRhLXBhcmFtQ29kZVR5cGU9XCInICsgdmFsLnBhcmFtQ29kZVR5cGUgKyAnXCI+JyArIHZhbC5wYXJhbU5hbWUgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJC5lYWNoKGZpbHRlckRhdGFzLnN1cGVydmlzZVRhZywgZnVuY3Rpb24gKGluZGV4LCB2YWwpIHtcclxuICAgICAgICAgICAgICAgIHRhZ0h0bWwgKz0gJzxkZCBkYXRhLXBhcmFtQ29kZT1cIicgKyB2YWwucGFyYW1Db2RlICsgJ1wiIGRhdGEtcGFyYW1Db2RlMT1cIicgKyB2YWwucGFyYW1Db2RlMSBcclxuICAgICAgICAgICAgICAgICsgJ1wiIGRhdGEtcGFyYW1Db2RlMj1cIicgKyB2YWwucGFyYW1Db2RlMiArICdcIiBkYXRhLXBhcmFtQ29kZVR5cGU9XCInICsgdmFsLnBhcmFtQ29kZVR5cGUgKyAnXCI+JyArIHZhbC5wYXJhbU5hbWUgKyAnPC9kZD4nO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgJCgnI01BUktFVF9UWVBFJykuaHRtbChtYXJrZXRIdG1sKTtcclxuICAgICAgICAgICAgJCgnI1RBU0tfVFlQRScpLmh0bWwodHlwZUh0bWwpO1xyXG4gICAgICAgICAgICAkKCcjVEFTS19TVEFUVVMnKS5odG1sKHN0YXR1c0h0bWwpO1xyXG4gICAgICAgICAgICAkKCcjU1VQRVJWSVNFX1RBRycpLmh0bWwodGFnSHRtbCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAkKFwiLmZpbHRlcl9saXN0IGRkXCIpLm9uKCdjbGljaycsIGZ1bmN0aW9uIChldikge1xyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxyXG4gICAgICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgdHlwZSA9ICQoZXYudGFyZ2V0KVswXS5kYXRhc2V0LnBhcmFtY29kZXR5cGU7XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2godHlwZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIk1BUktFVF9UWVBFXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZ2FsRW50aXR5Q2F0YSA9ICQoZXYudGFyZ2V0KVswXS5kYXRhc2V0LnBhcmFtY29kZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIlRBU0tfVFlQRVwiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjaGVja1R5cGUgPSAkKGV2LnRhcmdldClbMF0uZGF0YXNldC5wYXJhbWNvZGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIGNhc2UgXCJUQVNLX1NUQVRVU1wiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0YXNrU3RhdHVzID0gJChldi50YXJnZXQpWzBdLmRhdGFzZXQucGFyYW1jb2RlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiU1VQRVJWSVNFX1RBR19MQVJHRUNMQVNTXCI6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZ2FsRW50aXR5VGFnID0gJChldi50YXJnZXQpWzBdLmRhdGFzZXQucGFyYW1jb2RlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWdhbEVudGl0eVRhZzEgPSAkKGV2LnRhcmdldClbMF0uZGF0YXNldC5wYXJhbWNvZGUxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWdhbEVudGl0eVRhZzIgPSAkKGV2LnRhcmdldClbMF0uZGF0YXNldC5wYXJhbWNvZGUyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAkKCcuZmlsdGVyQnRuJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcuY3VzdG9tLW1hc2snKS5hZGRDbGFzcygnY3VzdG9tLW1hc2stLXZpc2libGUnKTtcclxuICAgICAgICAgICAgJCgnLmN1c3RvbS1jb250YWluZXInKS5hZGRDbGFzcygnY3VzdG9tLWNvbnRhaW5lci0tdmlzaWJsZScpO1xyXG4gICAgICAgICAgICAkKCcuY3VzdG9tLWNvbnRhaW5lciBsaScpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnLmN1c3RvbS1tYXNrJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAkKCcuY3VzdG9tLW1hc2snKS5yZW1vdmVDbGFzcygnY3VzdG9tLW1hc2stLXZpc2libGUnKTtcclxuICAgICAgICAgICAgaWYgKCQoXCIuZmxvYXRpbmdfYm94XCIpLmhhc0NsYXNzKCdhY3RpdmUnKSkge1xyXG4gICAgICAgICAgICAgICAgJChcIi5mbG9hdGluZ19ib3hcIikucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgJCgnLmZpbHRlcl9saXN0X2JveCcpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoJy5jdXN0b20tY29udGFpbmVyJykucmVtb3ZlQ2xhc3MoJ2N1c3RvbS1jb250YWluZXItLXZpc2libGUnKTtcclxuICAgICAgICAgICAgICAgICQoJy5jdXN0b20tY29udGFpbmVyIGxpJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJy5jdXN0b20tY29udGFpbmVyJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGV2KSB7XHJcbiAgICAgICAgICAgICQoJy5jdXN0b20tbWFzaycpLnJlbW92ZUNsYXNzKCdjdXN0b20tbWFzay0tdmlzaWJsZScpO1xyXG4gICAgICAgICAgICAkKCcuY3VzdG9tLWNvbnRhaW5lcicpLnJlbW92ZUNsYXNzKCdjdXN0b20tY29udGFpbmVyLS12aXNpYmxlJyk7XHJcbiAgICAgICAgICAgICQoJy5jdXN0b20tY29udGFpbmVyIGxpJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICB2YXIgbWV0dGVyID0gJChldi50YXJnZXQpLmRhdGEoJ21ldHRlcicpO1xyXG4gICAgICAgICAgICBpZiAobWV0dGVyID09IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgICQoJy5maWx0ZXJCdG4gc3BhbicpLmh0bWwoJ+S4jemZkCcgKyAnPGkgY2xhc3M9XCJpY29uLWFycm93XCI+PC9pPicpXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcuZmlsdGVyQnRuIHNwYW4nKS5odG1sKG1ldHRlciArICc8aSBjbGFzcz1cImljb24tYXJyb3dcIj48L2k+JylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ2Rpc3RhbmNlJywgdmFsOiBtZXR0ZXJ9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJChcIi5mbG9hdGluZ19ib3hcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICAkKHRoaXMpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnLmN1c3RvbS1tYXNrJykuYWRkQ2xhc3MoJ2N1c3RvbS1tYXNrLS12aXNpYmxlJyk7XHJcbiAgICAgICAgICAgICQoJy5maWx0ZXJfbGlzdF9ib3gnKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIGlmIChjdXJUYXNrU3RhdHVzKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjVEFTS19TVEFUVVMgZGQnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXJyID0galF1ZXJ5Lm1ha2VBcnJheSgkKCcjVEFTS19TVEFUVVMgZGQnKSk7XHJcbiAgICAgICAgICAgICAgICAkLmVhY2goYXJyLCBmdW5jdGlvbiAoaW5kZXgsIHZhbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWwuZGF0YXNldC5wYXJhbWNvZGUgPT0gdGFza1N0YXR1cykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKHZhbCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjVEFTS19TVEFUVVMgZGQnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKGNpdHlDb2RlLmxlbmd0aCA+IDAgfHwgZGlzdENvZGUubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHVzZXJMZXZlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNwaWNrZXItYnRuJykudGV4dChjaXR5TmFtZS5qb2luKCctJykpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNwaWNrZXItYnRuJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkaXN0TmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjZGlzdHJpY3QtYnRuJykudGV4dChkaXN0TmFtZS5qb2luKCctJykpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAkKCcjZGlzdHJpY3QtYnRuJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLnRleHQoZGlzdE5hbWUuam9pbignLScpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjZGlzdHJpY3QtYnRuJykuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKHVzZXJMZXZlbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNwaWNrZXItYnRuJykudGV4dCgn5biCfOWMunzljr8nKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjcGlja2VyLWJ0bicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAkKCcjZGlzdHJpY3QtYnRuJykudGV4dCgn5ZWG5ZyIL+eJh+WMuicpO1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNkaXN0cmljdC1idG4nKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICQoJyNkaXN0cmljdC1idG4nKS50ZXh0KCfllYblnIgv54mH5Yy6Jyk7XHJcbiAgICAgICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY3VyTGVnYWxFbnRpdHlDYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjTUFSS0VUX1RZUEUgZGQnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB2YXIgYXJyID0galF1ZXJ5Lm1ha2VBcnJheSgkKCcjTUFSS0VUX1RZUEUgZGQnKSk7XHJcbiAgICAgICAgICAgICAgICAkLmVhY2goYXJyLCBmdW5jdGlvbiAoaW5kZXgsIHZhbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWwuZGF0YXNldC5wYXJhbWNvZGUgPT0gbGVnYWxFbnRpdHlDYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICQodmFsKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICQoJyNNQVJLRVRfVFlQRSBkZCcpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY3VyQ2hlY2tUeXBlKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcjVEFTS19UWVBFIGRkJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFyciA9IGpRdWVyeS5tYWtlQXJyYXkoJCgnI1RBU0tfVFlQRSBkZCcpKTtcclxuICAgICAgICAgICAgICAgICQuZWFjaChhcnIsIGZ1bmN0aW9uIChpbmRleCwgdmFsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHZhbC5kYXRhc2V0LnBhcmFtY29kZSA9PSBjaGVja1R5cGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh2YWwpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI1RBU0tfVFlQRSBkZCcpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY3VyTGVnYWxFbnRpdHlUYWcpIHtcclxuICAgICAgICAgICAgICAgICQoJyNTVVBFUlZJU0VfVEFHIGRkJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFyciA9IGpRdWVyeS5tYWtlQXJyYXkoJCgnI1NVUEVSVklTRV9UQUcgZGQnKSk7XHJcbiAgICAgICAgICAgICAgICAkLmVhY2goYXJyLCBmdW5jdGlvbiAoaW5kZXgsIHZhbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh2YWwuZGF0YXNldC5wYXJhbWNvZGUgPT0gbGVnYWxFbnRpdHlUYWcpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgJCh2YWwpLmFkZENsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI1NVUEVSVklTRV9UQUcgZGQnKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgJCgnLmN1c3RvbS1tYXNrJykub24oJ3RvdWNobW92ZScsIGZ1bmN0aW9uIChldikge1xyXG4gICAgICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKCcuY3VzdG9tLWNvbnRhaW5lcicpLm9uKCd0b3VjaG1vdmUnLCBmdW5jdGlvbihldikge1xyXG4gICAgICAgICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgJCgnLmlwdFNlYXJjaCcpLm9uKCdrZXlkb3duJyxmdW5jdGlvbihlKXtcclxuICAgICAgICAgICAgLy8gZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgICAgICBpZihlLmtleUNvZGUgPT0gMTMpe1xyXG4gICAgICAgICAgICAgICAgZGQucG9zdE1lc3NhZ2Uoe3R5cGU6ICdrZXl3b3JkJywgdmFsOiBlLnRhcmdldC52YWx1ZSB8fCAnJ30pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoJy5idG5faGFuZGxlcl9ib3ggbGknKS5vbignY2xpY2snLCBmdW5jdGlvbiAoZXYpIHtcclxuICAgICAgICAgICAgdmFyIGZpbHRlciA9ICQoZXYudGFyZ2V0KS5kYXRhKCdmaWx0ZXInKTtcclxuICAgICAgICAgICAgdmFyIHRpdGxlID0gJChldi50YXJnZXQpLmRhdGEoJ3RpdGxlJyk7XHJcbiAgICAgICAgICAgICQodGhpcykuY2xvc2VzdChcImxpXCIpLmFkZENsYXNzKCdhY3RpdmUnKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxyXG4gICAgICAgICAgICBpZiAoZmlsdGVyID09IFwiXCIgfHwgZmlsdGVyID09IFwiMVwiIHx8IGZpbHRlciA9PSBcIjJcIiB8fCBmaWx0ZXIgPT0gXCIzXCIpIHtcclxuICAgICAgICAgICAgICAgICQoJy5jaGVja190aXRsZScpLnRleHQodGl0bGUpLmZhZGVJbigpO1xyXG4gICAgICAgICAgICAgICAgZGQucG9zdE1lc3NhZ2Uoe3R5cGU6ICdjaGVja1N0YXRlJywgdmFsOiBmaWx0ZXJ9KTtcclxuICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChmaWx0ZXIgPT0gXCJyZXNldFwiKSB7XHJcbiAgICAgICAgICAgICAgICAkKCcuY2hlY2tfdGl0bGUnKS5mYWRlT3V0KCk7XHJcbiAgICAgICAgICAgICAgICBtYXJrZXJzLmNsZWFyTGF5ZXJzKCk7XHJcbiAgICAgICAgICAgICAgICBtYXAuc2V0VmlldyhbTnVtYmVyKGluaXRMYXRsbmcubGF0KSwgTnVtYmVyKGluaXRMYXRsbmcubG9uKV0sIGluaXRab29tKTtcclxuICAgICAgICAgICAgICAgIGNpcmNsZSA9IEwuY2lyY2xlKFttYXAuZ2V0Q2VudGVyKCkubGF0LCBtYXAuZ2V0Q2VudGVyKCkubG5nXSwge3JhZGl1czogMzB9KTtcclxuICAgICAgICAgICAgICAgIG1hcC5hZGRMYXllcihjaXJjbGUpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICAkKFwiLmNhbGxfdGVsXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICB2YXIgcGhvbmVOdW0gPSAkKFwiLmNhbGxfdGVsXCIpLmRhdGEoXCJ0ZWxcIik7XHJcbiAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAnY2FsbFBob25lJywgdmFsOiBwaG9uZU51bX0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKFwiLm1lbnVfaWNvbl8zXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ29wZW5NYXAnLCB2YWw6IG1hcFBhcmFtc30pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKFwiLmRldGFpbFwiKS5vbihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZGQucG9zdE1lc3NhZ2Uoe3R5cGU6ICdkZXRhaWwnLCB2YWw6IGlkeH0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKFwiLmdvY2hlY2tcIikub24oXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAnZ29jaGVjaycsIHZhbDogaWR4fSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIudW5maW5kXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ3VuZmluZCcsIHZhbDogaWR4fSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICQoXCIucmVzZXRfYnRuXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBhcmVhQ29kZSA9IFtdOyBkaXN0TmFtZSA9IFtdOyBkaXN0Q29kZSA9IFtdO1xyXG4gICAgICAgICAgICBjaXR5TmFtZSA9IFtdOyBjaXR5Q29kZSA9IFtdO1xyXG4gICAgICAgICAgICAkKCcjcGlja2VyLWJ0bicpLnRleHQoJ+W4gnzljLp85Y6/Jyk7XHJcbiAgICAgICAgICAgICQoJyNkaXN0cmljdC1idG4nKS50ZXh0KCfllYblnIgv54mH5Yy6Jyk7XHJcbiAgICAgICAgICAgIGlmICh1c2VyTGV2ZWwpIHtcclxuICAgICAgICAgICAgICAgICQoJyNwaWNrZXItYnRuJykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICQoJyNkaXN0cmljdC1idG4nKS5jc3MoJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgJCgnI2Rpc3RyaWN0LWJ0bicpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAkKFwiLmZpbHRlcl90eXBlIGRkXCIpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnLmN1c3RvbS1tYXNrJykucmVtb3ZlQ2xhc3MoJ2N1c3RvbS1tYXNrLS12aXNpYmxlJyk7XHJcbiAgICAgICAgICAgICQoXCIuZmxvYXRpbmdfYm94XCIpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgJCgnLmZpbHRlcl9saXN0X2JveCcpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcclxuICAgICAgICAgICAgY3VyVGFza1N0YXR1cyA9ICcnXHJcbiAgICAgICAgICAgIGN1ckxlZ2FsRW50aXR5Q2F0YSA9ICcnXHJcbiAgICAgICAgICAgIGN1ckNoZWNrVHlwZSA9ICcnXHJcbiAgICAgICAgICAgIGN1ckxlZ2FsRW50aXR5VGFnID0gJydcclxuICAgICAgICAgICAgY3VyTGVnYWxFbnRpdHlUYWcxID0gJydcclxuICAgICAgICAgICAgY3VyTGVnYWxFbnRpdHlUYWcyID0gJydcclxuICAgICAgICAgICAgY3VycmVudEFyZWFDb2RlID0gJydcclxuICAgICAgICAgICAgdmFyIHByZUZpbHRlckRhdGEgPSB7XHJcbiAgICAgICAgICAgICAgICB0YXNrU3RhdHVzOiAnJyxcclxuICAgICAgICAgICAgICAgIGJ1c2luZXNzRGlzdHJpY3Q6ICcnLCAvL+eJh+WMulxyXG4gICAgICAgICAgICAgICAgbGVnYWxFbnRpdHlDYXRhOiAnJyxcclxuICAgICAgICAgICAgICAgIGNoZWNrVHlwZTogJycsXHJcbiAgICAgICAgICAgICAgICBsZWdhbEVudGl0eVRhZzogJycsXHJcbiAgICAgICAgICAgICAgICBsZWdhbEVudGl0eVRhZzE6ICcnLFxyXG4gICAgICAgICAgICAgICAgbGVnYWxFbnRpdHlUYWcyOiAnJyxcclxuICAgICAgICAgICAgICAgIGxvY2FsQWRtOiAnJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAnYnVzaW5lc3NEaXN0cmljdCcsIHZhbDogcHJlRmlsdGVyRGF0YX0pO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAkKFwiLmNvbmZpcm1fYnRuXCIpLm9uKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAvLyBhcmVhQ29kZSA9IGNpdHlDb2RlLmNvbmNhdChkaXN0Q29kZSk7XHJcbiAgICAgICAgICAgIC8vIGlmIChhcmVhQ29kZSkge1xyXG4gICAgICAgICAgICAvLyAgICAgY3VycmVudEFyZWFDb2RlID0gYXJlYUNvZGUuam9pbignLCcpO1xyXG4gICAgICAgICAgICAvLyB9IGVsc2UgeyAgICBcclxuICAgICAgICAgICAgLy8gICAgIGN1cnJlbnRBcmVhQ29kZSA9ICcnO1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIGN1clRhc2tTdGF0dXMgPSB0YXNrU3RhdHVzIHx8ICcnXHJcbiAgICAgICAgICAgIGN1ckxlZ2FsRW50aXR5Q2F0YSA9IGxlZ2FsRW50aXR5Q2F0YSB8fCAnJ1xyXG4gICAgICAgICAgICBjdXJDaGVja1R5cGUgPSBjaGVja1R5cGUgfHwgJydcclxuICAgICAgICAgICAgY3VyTGVnYWxFbnRpdHlUYWcgPSBsZWdhbEVudGl0eVRhZyB8fCAnJ1xyXG4gICAgICAgICAgICBjdXJMZWdhbEVudGl0eVRhZzEgPSBsZWdhbEVudGl0eVRhZzEgfHwgJydcclxuICAgICAgICAgICAgY3VyTGVnYWxFbnRpdHlUYWcyID0gbGVnYWxFbnRpdHlUYWcyIHx8ICcnXHJcbiAgICAgICAgICAgIHZhciBwcmVGaWx0ZXJEYXRhID0ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRhc2tTdGF0dXM6IGN1clRhc2tTdGF0dXMsXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gYnVzaW5lc3NEaXN0cmljdDogY3VycmVudEFyZWFDb2RlLCAvL+eJh+WMulxyXG4gICAgICAgICAgICAgICAgICAgIGxlZ2FsRW50aXR5Q2F0YTogY3VyTGVnYWxFbnRpdHlDYXRhLFxyXG4gICAgICAgICAgICAgICAgICAgIGNoZWNrVHlwZTogY3VyQ2hlY2tUeXBlLFxyXG4gICAgICAgICAgICAgICAgICAgIGxlZ2FsRW50aXR5VGFnOiBjdXJMZWdhbEVudGl0eVRhZyxcclxuICAgICAgICAgICAgICAgICAgICBsZWdhbEVudGl0eVRhZzE6IGN1ckxlZ2FsRW50aXR5VGFnMSxcclxuICAgICAgICAgICAgICAgICAgICBsZWdhbEVudGl0eVRhZzI6IGN1ckxlZ2FsRW50aXR5VGFnMlxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjaXR5Q29kZS5sZW5ndGggPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgcHJlRmlsdGVyRGF0YVsnbG9jYWxBZG0nXSA9IGNpdHlDb2RlWzBdO1xyXG4gICAgICAgICAgICAgICAgcHJlRmlsdGVyRGF0YVsnYnVzaW5lc3NEaXN0cmljdCddID0gJyc7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZGlzdENvZGUubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBwcmVGaWx0ZXJEYXRhWydsb2NhbEFkbSddID0gY2l0eUNvZGVbMF07XHJcbiAgICAgICAgICAgICAgICAgICAgcHJlRmlsdGVyRGF0YVsnYnVzaW5lc3NEaXN0cmljdCddID0gJyc7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHByZUZpbHRlckRhdGFbJ2xvY2FsQWRtJ10gPSBkaXN0Q29kZVswXTtcclxuICAgICAgICAgICAgICAgICAgICBwcmVGaWx0ZXJEYXRhWydidXNpbmVzc0Rpc3RyaWN0J10gPSBkaXN0Q29kZVsxXSB8fCAnJztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAkKCcuY3VzdG9tLW1hc2snKS5yZW1vdmVDbGFzcygnY3VzdG9tLW1hc2stLXZpc2libGUnKTtcclxuICAgICAgICAgICAgJChcIi5mbG9hdGluZ19ib3hcIikucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICAkKCcuZmlsdGVyX2xpc3RfYm94JykucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xyXG4gICAgICAgICAgICBkZC5wb3N0TWVzc2FnZSh7dHlwZTogJ2J1c2luZXNzRGlzdHJpY3QnLCB2YWw6IHByZUZpbHRlckRhdGF9KTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgYnRuLm9uY2xpY2sgPSBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICAvLyBkYXRhID0ge1wi5bCP5piO5a62XCI6W10sIFwi5bCP57qi5a62XCI6W1wi5bCP57qi54i454i4XCIsIFwi5bCP57qi5aaI5aaIXCJdfVxyXG4gICAgICAgICAgICB2YXIgcGlja2VyVmlldyA9IG5ldyBQaWNrZXJWaWV3KHtcclxuICAgICAgICAgICAgICAgIGJpbmRFbGVtOiBidG4sXHJcbiAgICAgICAgICAgICAgICBkYXRhOiBwaWNrZXJPcHQsXHJcbiAgICAgICAgICAgICAgICAvLyBkYXRhOiBkYXRhLFxyXG4gICAgICAgICAgICAgICAgdGl0bGU6ICfluIJ85Yy6fOWOvycsXHJcbiAgICAgICAgICAgICAgICBsZWZ0VGV4dDogJ+WPlua2iCcsXHJcbiAgICAgICAgICAgICAgICByaWdodFRleHQ6ICfnoa7lrponLFxyXG4gICAgICAgICAgICAgICAgZ2V0QWpheERhdGE6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgYWpheEZuOiBmdW5jdGlvbihpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogZW5jb2RlVVJJKFwiaHR0cDovLzE5Mi4xNjguNS4xMDc6ODA4MC8vc3VwZXJ2aXNlVGFnL3NlbGVjdFN1cGVydmlzZVRhZ0xpc3RCeVRhZ0xhcmdlQ29kZVwiKSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW46ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlcklkOiAnJyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhZ0xhcmdlQ2F0ZWdvcnk6ICcnXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdDZW50ZXJEYXRhLmxhdGl0dWRlID0gcGFyc2VGbG9hdChyZXMubGF0bG9uLnNwbGl0KCcsJylbMV0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdDZW50ZXJEYXRhLmxvbmdpdHVkZSA9IHBhcnNlRmxvYXQocmVzLmxhdGxvbi5zcGxpdCgnLCcpWzBdKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2VudGVyRGF0YS5sb2NhdGlvbiA9IHJlcy5jaXR5LnZhbHVlICsgcmVzLmRpc3QudmFsdWUgKyByZXMudG93bi52YWx1ZSArIHJlcy5wb2k7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZC5hbGVydCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCLlnLDlnYDop6PmnpDlh7rplJlcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByaWdodEZuOiBmdW5jdGlvbiggc2VsZWN0QXJyICl7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gdmFyIGluZGV4QXJyeSA9IGJ0bi5nZXRBdHRyaWJ1dGUoXCJzZWxlY3RjYWNoZVwiKTtcclxuICAgICAgICAgICAgICAgICAgICBjaXR5TmFtZSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGNpdHlDb2RlID0gW107XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHNlbEFsbDtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgc3ViU2xpY2Vub0xETmFtZUpzb247XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGZpcnN0SWR4ID0gZmlsdGVyRGF0YXMuU2xpY2Vub0xETmFtZUpzb24uZmluZEluZGV4KGZ1bmN0aW9uKG9iail7cmV0dXJuIG9iai5uYW1lID09IHNlbGVjdEFyclswXX0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGNpdHlDb2RlLnB1c2goZmlsdGVyRGF0YXMuU2xpY2Vub0xETmFtZUpzb25bZmlyc3RJZHhdLmNvZGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGlmIChzZWxlY3RBcnJbMV0gIT0gJ+WFqOmDqCcpIHtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgY2l0eU5hbWUgPSBzZWxlY3RBcnI7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIHNlbEFsbCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBzdWJTbGljZW5vTEROYW1lSnNvbiA9IGZpbHRlckRhdGFzLlNsaWNlbm9MRE5hbWVKc29uW2ZpcnN0SWR4XS5jaGlsZHJlbjtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgdmFyIHN1YklkeCA9IHN1YlNsaWNlbm9MRE5hbWVKc29uLmZpbmRJbmRleChmdW5jdGlvbih2YWwpe3JldHVybiB2YWwubmFtZSA9PSBzZWxlY3RBcnJbMV19KTtcclxuICAgICAgICAgICAgICAgICAgICAvLyAgICAgY2l0eUNvZGUucHVzaChzdWJTbGljZW5vTEROYW1lSnNvbltzdWJJZHhdLmNvZGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIHNlbEFsbCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIGNpdHlOYW1lLnB1c2goc2VsZWN0QXJyWzBdKTtcclxuICAgICAgICAgICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgICAgICAgICAgY2l0eU5hbWUgPSBzZWxlY3RBcnI7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsQWxsID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgc3ViU2xpY2Vub0xETmFtZUpzb24gPSBmaWx0ZXJEYXRhcy5TbGljZW5vTEROYW1lSnNvbltmaXJzdElkeF0uY2hpbGRyZW47XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN1YklkeCA9IHN1YlNsaWNlbm9MRE5hbWVKc29uLmZpbmRJbmRleChmdW5jdGlvbih2YWwpe3JldHVybiB2YWwubmFtZSA9PSBzZWxlY3RBcnJbMV19KTtcclxuICAgICAgICAgICAgICAgICAgICBjaXR5Q29kZS5wdXNoKHN1YlNsaWNlbm9MRE5hbWVKc29uW3N1YklkeF0uY29kZSk7XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGJ0bi5pbm5lclRleHQgPSBjaXR5TmFtZS5qb2luKCctJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnRuLnNldEF0dHJpYnV0ZShcImNsYXNzXCIsICdhY3RpdmUnKTtcclxuICAgICAgICAgICAgICAgICAgICBkaXN0QnRuLmlubmVyVGV4dCA9ICfllYblnIgv54mH5Yy6JztcclxuICAgICAgICAgICAgICAgICAgICBkaXN0QnRuLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdEJ0bi5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCAnJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdE5hbWUgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICBkaXN0Q29kZSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIGRkLnBvc3RNZXNzYWdlKHt0eXBlOiAnc2hvd0Rpc3RyaWN0JywgdmFsOiB7bG9jYWxBZG06IGNpdHlDb2RlW2NpdHlDb2RlLmxlbmd0aCAtIDFdLCBzZWxBbGw6IHNlbEFsbH19KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBkaXN0QnRuLm9uY2xpY2sgPSBmdW5jdGlvbigpe1xyXG4gICAgICAgICAgICB2YXIgcGlja2VyVmlldyA9IG5ldyBQaWNrZXJWaWV3KHtcclxuICAgICAgICAgICAgICAgIGJpbmRFbGVtOiBkaXN0QnRuLFxyXG4gICAgICAgICAgICAgICAgZGF0YTogZGlzdFBpY2tlck9wdCxcclxuICAgICAgICAgICAgICAgIHRpdGxlOiAn5ZWG5ZyIL+eJh+WMuicsXHJcbiAgICAgICAgICAgICAgICBsZWZ0VGV4dDogJ+WPlua2iCcsXHJcbiAgICAgICAgICAgICAgICByaWdodFRleHQ6ICfnoa7lrponLFxyXG4gICAgICAgICAgICAgICAgZ2V0QWpheERhdGE6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgYWpheEZuOiBmdW5jdGlvbihpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgICAgICQuYWpheCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHVybDogZW5jb2RlVVJJKFwiaHR0cDovLzE5Mi4xNjguNS4xMDc6ODA4MC9zdXBlcnZpc2VUYWcvc2VsZWN0U3VwZXJ2aXNlVGFnTGlzdEJ5VGFnTGFyZ2VDb2RlXCIpLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VySWQ6ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9rZW46ICcnLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFnTGFyZ2VDYXRlZ29yeTogJycsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25cIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdDZW50ZXJEYXRhLmxhdGl0dWRlID0gcGFyc2VGbG9hdChyZXMubGF0bG9uLnNwbGl0KCcsJylbMV0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdDZW50ZXJEYXRhLmxvbmdpdHVkZSA9IHBhcnNlRmxvYXQocmVzLmxhdGxvbi5zcGxpdCgnLCcpWzBdKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2VudGVyRGF0YS5sb2NhdGlvbiA9IHJlcy5jaXR5LnZhbHVlICsgcmVzLmRpc3QudmFsdWUgKyByZXMudG93bi52YWx1ZSArIHJlcy5wb2k7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGVycm9yOiBmdW5jdGlvbiAoZXJyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkZC5hbGVydCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCLlnLDlnYDop6PmnpDlh7rplJlcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByaWdodEZuOiBmdW5jdGlvbiggc2VsZWN0QXJyICl7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdE5hbWUgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICBkaXN0Q29kZSA9IFtdO1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBzdWJTbGljZW5vTEROYW1lSnNvbjtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgZmlyc3RJZHggPSBmaWx0ZXJEYXRhcy5EaXN0cmljdEpzb24uZmluZEluZGV4KGZ1bmN0aW9uKG9iail7cmV0dXJuIG9iai5uYW1lID09IHNlbGVjdEFyclswXX0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGRpc3RDb2RlLnB1c2goZmlsdGVyRGF0YXMuRGlzdHJpY3RKc29uW2ZpcnN0SWR4XS5jb2RlKTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoc2VsZWN0QXJyWzFdICE9ICflhajpg6gnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3ROYW1lID0gc2VsZWN0QXJyO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWJTbGljZW5vTEROYW1lSnNvbiA9IGZpbHRlckRhdGFzLkRpc3RyaWN0SnNvbltmaXJzdElkeF0uY2hpbGRyZW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZhciBzdWJJZHggPSBzdWJTbGljZW5vTEROYW1lSnNvbi5maW5kSW5kZXgoZnVuY3Rpb24odmFsKXtyZXR1cm4gdmFsLm5hbWUgPT0gc2VsZWN0QXJyWzFdfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3RDb2RlLnB1c2goc3ViU2xpY2Vub0xETmFtZUpzb25bc3ViSWR4XS5jb2RlKTtcclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXN0TmFtZS5wdXNoKHNlbGVjdEFyclswXSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIGRpc3ROYW1lID0gc2VsZWN0QXJyO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHN1YlNsaWNlbm9MRE5hbWVKc29uID0gZmlsdGVyRGF0YXMuRGlzdHJpY3RKc29uW2ZpcnN0SWR4XS5jaGlsZHJlbjtcclxuICAgICAgICAgICAgICAgICAgICAvLyB2YXIgc3ViSWR4ID0gc3ViU2xpY2Vub0xETmFtZUpzb24uZmluZEluZGV4KGZ1bmN0aW9uKHZhbCl7cmV0dXJuIHZhbC5uYW1lID09IHNlbGVjdEFyclsxXX0pO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGRpc3RDb2RlLnB1c2goc3ViU2xpY2Vub0xETmFtZUpzb25bc3ViSWR4XS5jb2RlKTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdEJ0bi5pbm5lclRleHQgPSBkaXN0TmFtZS5qb2luKCctJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgZGlzdEJ0bi5zZXRBdHRyaWJ1dGUoXCJjbGFzc1wiLCAnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuXHJcbiAgICAgICAgZnVuY3Rpb24gZHJhd01hcmVrZXJzKCkge1xyXG4gICAgICAgICAgICBtYXJrRGF0YXMuZm9yRWFjaChmdW5jdGlvbiAodmFsLCBpbmRleCkge1xyXG4gICAgICAgICAgICAgICAgdmFyIHByZVN0YXRlID0gdmFsLmNoZWNrU3RhdGUsIG1hcmtlcjtcclxuICAgICAgICAgICAgICAgIHN3aXRjaChwcmVTdGF0ZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIjFcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFya2VyID0gTC5tYXJrZXIoW3ZhbC5sYXQsIHZhbC5sb25dLCB7ZHJhZ2dhYmxlOiBmYWxzZSwgb3BhY2l0eTogMSwgaWNvbjogTC5kaXZJY29uKHtjbGFzc05hbWU6ICdncmVlbi1tYXJrZXInLCBodG1sOiAnPHA+JyArIChpbmRleCArIDEpICsgJzwvcD4nfSl9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSBcIjJcIjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgbWFya2VyID0gTC5tYXJrZXIoW3ZhbC5sYXQsIHZhbC5sb25dLCB7ZHJhZ2dhYmxlOiBmYWxzZSwgb3BhY2l0eTogMSwgaWNvbjogTC5kaXZJY29uKHtjbGFzc05hbWU6ICdibHVlLW1hcmtlcicsIGh0bWw6ICc8cD4nICsgKGluZGV4ICsgMSkgKyAnPC9wPid9KX0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIFwiM1wiOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtYXJrZXIgPSBMLm1hcmtlcihbdmFsLmxhdCwgdmFsLmxvbl0sIHtkcmFnZ2FibGU6IGZhbHNlLCBvcGFjaXR5OiAxLCBpY29uOiBMLmRpdkljb24oe2NsYXNzTmFtZTogJ3JlZC1tYXJrZXInLCBodG1sOiAnPHA+JyArIChpbmRleCArIDEpICsgJzwvcD4nfSl9KTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBtYXJrZXJzLmFkZExheWVyKG1hcmtlcik7XHJcbiAgICAgICAgICAgICAgICBtYXJrZXIub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZigkKFwiLmRldGFpbF9pbmZvXCIpLmhhc0NsYXNzKCdhY3RpdmUnKSkgeyBcclxuICAgICAgICAgICAgICAgICAgICAgICAgJChcIi5kZXRhaWxfaW5mb1wiKS5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGlkeCA9IHBhcnNlSW50KGUub3JpZ2luYWxFdmVudC50YXJnZXQudGV4dENvbnRlbnQpIC0gMTtcclxuICAgICAgICAgICAgICAgICAgICBnZXRBZHJlc3NJbmZvKG1hcmtEYXRhc1tpZHhdKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIHJlZHVjdGlvbk1hcCgpIHtcclxuICAgICAgICAgICAgbWFya2Vycy5jbGVhckxheWVycygpO1xyXG4gICAgICAgICAgICBtYXAuc2V0VmlldyhbTnVtYmVyKGluaXRMYXRsbmcubGF0KSwgTnVtYmVyKGluaXRMYXRsbmcubG9uKV0sIGluaXRab29tKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGZ1bmN0aW9uIGdldEFkcmVzc0luZm8gKGUpIHtcclxuICAgICAgICAgICAgdmFyIHJldmVyc2VSZXNvbHV0aW9uVXJsID0gZW5jb2RlVVJJKFwiaHR0cHM6Ly9kaC5kaXR1LnpqLmNuOjk0NDMvaW52ZXJzZS9nZXRJbnZlcnNlR2VvY29kaW5nLmpzb25wPyZkZXRhaWw9MSZ6b29tPTExJmxhdGxvbj1cIiArIGUubG9uICsgXCIsXCIgKyBlLmxhdCArIFwiJmxhdD0mbG9uPSZjdXN0b21lcj0yXCIpO1xyXG4gICAgICAgICAgICAkLmFqYXgoe1xyXG4gICAgICAgICAgICAgICAgdXJsOiByZXZlcnNlUmVzb2x1dGlvblVybCxcclxuICAgICAgICAgICAgICAgIGRhdGFUeXBlOiBcImpzb25wXCIsXHJcbiAgICAgICAgICAgICAgICAvLyBqc29ucDogXCJjYWxsYmFja1wiLFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24ocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGxvY2F0aW9uID0gcmVzLmNpdHkudmFsdWUgKyByZXMuZGlzdC52YWx1ZSArIHJlcy50b3duLnZhbHVlICsgcmVzLnBvaTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmxlZ2FsRW50aXR5X25hbWVcIikudGV4dChlLmxlZ2FsRW50aXR5TmFtZSlcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmxlZ2FsUmVwX25hbWVcIikudGV4dChlLmxlZ2FsUmVwKVxyXG4gICAgICAgICAgICAgICAgICAgICQoXCIubGVnYWxSZXBfdGVsXCIpLnRleHQoZS50ZWwpXHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5hZGRyZXNzX2luZm9cIikudGV4dChsb2NhdGlvbilcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmRpc3RhbmNlX2luZm9cIikudGV4dCgocGFyc2VJbnQoZS5kaXN0YW5jZSkgLyAxMDAwKS50b0ZpeGVkKDIpKTtcclxuICAgICAgICAgICAgICAgICAgICAkKFwiLmNhbGxfdGVsXCIpLmRhdGEoXCJ0ZWxcIiwgZS50ZWwpO1xyXG4gICAgICAgICAgICAgICAgICAgIG1hcFBhcmFtcyA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbG9uZ2l0dWRlOiBlLmxvbixcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGF0aXR1ZGU6IGUubGF0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiByZXMucG9pLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBhZGRyZXNzOiByZXMucG9pLFxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICAgICAgJChcIi5kZXRhaWxfaW5mb1wiKS5hZGRDbGFzcygnYWN0aXZlJyk7XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICBkZC5hbGVydCh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwi5Zyw5Z2A6Kej5p6Q5Ye66ZSZXCJcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfSJdLCJzb3VyY2VSb290IjoiIn0=