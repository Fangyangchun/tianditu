!function(e){var t={};function a(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(n,i,function(t){return e[t]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="./",a(a.s=0)}([function(e,t){var a,n,i,s;navigator.userAgent.toLowerCase().indexOf("dingtalk")>-1&&document.writeln('<script src="https://appx/web-view.min.js"><\/script>');var o,c,r,l,d,m,u,v,p,f,g,b,y,h,C,k,T,_,x,S,A,w,j,E,M,N=10,D=[],P=[],I=[],z=[],K=[],O=document.getElementById("picker-btn"),Y=document.getElementById("district-btn"),J=document.getElementById("tag-btn");function R(){g={},$.each(u.DistrictJson,function(e,t){var a=t.name;g[a]=["全部"],t.children&&$.each(t.children,function(e,t){g[a].push(t.name)})})}function B(e,t){$.ajax({async:!1,type:"POST",url:encodeURI(i+s),data:JSON.stringify({encParamsStr:encrypt(JSON.stringify({token:n,userId:a,tagLargeCategory:t}))}),contentType:"application/json",success:function(t){x="string"==typeof t?JSON.parse(t).data:t.data,$.each(x,function(t,a){_[e].push(a.tagName)})},error:function(e){dd.alert({content:e.msg})}})}function U(){D.forEach(function(e,t){var a;switch(e.checkState){case"1":a=L.marker([e.lat,e.lon],{draggable:!1,opacity:1,icon:L.divIcon({className:"green-marker",html:"<p>"+(t+1)+"</p>"})});break;case"2":a=L.marker([e.lat,e.lon],{draggable:!1,opacity:1,icon:L.divIcon({className:"blue-marker",html:"<p>"+(t+1)+"</p>"})});break;case"3":a=L.marker([e.lat,e.lon],{draggable:!1,opacity:1,icon:L.divIcon({className:"red-marker",html:"<p>"+(t+1)+"</p>"})})}l.addLayer(a),a.on("click",function(e){$(".detail_info").hasClass("active")&&$(".detail_info").removeClass("active"),m=parseInt(e.originalEvent.target.textContent)-1,function(e){var t=encodeURI("https://dh.ditu.zj.cn:9443/inverse/getInverseGeocoding.jsonp?&detail=1&zoom=11&latlon="+e.lon+","+e.lat+"&lat=&lon=&customer=2");$.ajax({url:t,dataType:"jsonp",success:function(t){var a=t.city.value+t.dist.value+t.town.value+t.poi;$(".legalEntity_name").text(e.legalEntityName),$(".legalRep_name").text(e.legalRep),$(".legalRep_tel").text(e.tel),$(".address_info").text(a),$(".distance_info").text((parseInt(e.distance)/1e3).toFixed(2)),$(".call_tel").data("tel",e.tel),d={longitude:e.lon,latitude:e.lat,name:t.poi,address:t.poi},$(".detail_info").addClass("active")},error:function(e){dd.alert({content:"地址解析出错"})}})}(D[m])})})}dd.postMessage({type:"init"}),dd.onMessage=function(e){a=e.userId,n=e.token,i=e.baseUrl,s=e.tagAction,o={lon:e.lon,lat:e.lat}||{lon:120.14989,lat:30.27751},P=e.cityName||"杭州市",D=e.markDatas,u=e.filterDatas,v=e.userLevel,p=e.showDistrict,e.init||v&&p&&(Y.style.display="inline-block",R()),function(e){if(e)return void function(){c=L.map("map",{crs:L.CRS.CustomEPSG4326,center:o,minZoom:5,zoom:N,inertiaDeceleration:15e3,zoomControl:!1});var e=new L.GXYZ("https://ditu.zjzwfw.gov.cn/mapserver/vmap/zjvmap/getMAP?x={x}&y={y}&l={z}&styleId=tdt_biaozhunyangshi_2017",{tileSize:512,minZoom:5});c.addLayer(e);var t=new L.GXYZ("https://ditu.zjzwfw.gov.cn/mapserver/label/zjvmap/getImg?x={x}&y={y}&l={z}&styleId=tdt_biaozhunyangshi_2017",{tileSize:512,hitDetection:!0,keepBuffer:0,updateWhenZooming:!1});c.addLayer(t);var a=L.icon({iconUrl:"../img/indoor_pub_poi_pressed.png",iconSize:[21,30],iconAnchor:[10,20]}),n=L.marker([c.getCenter().lat,c.getCenter().lng],{draggable:!1,opacity:1,icon:a});c.addLayer(n),l=L.markerClusterGroup(),U(),c.addLayer(l),$(".whiteBtn").addClass("active"),$(".check_title").text($(".whiteBtn").data("title")).fadeIn(),function(){var e="",t="",a="";$.each(u.marketType,function(t,a){e+='<dd data-paramCode="'+a.paramCode+'" data-paramCodeType="'+a.paramCodeType+'">'+a.paramName+"</dd>"}),$.each(u.checkType,function(e,a){t+='<dd data-paramCode="'+a.paramCode+'" data-paramCodeType="'+a.paramCodeType+'">'+a.paramName+"</dd>"}),$.each(u.taskStatus,function(e,t){a+='<dd data-paramCode="'+t.paramCode+'" data-paramCodeType="'+t.paramCodeType+'">'+t.paramName+"</dd>"}),$("#MARKET_TYPE").html(e),$("#TASK_TYPE").html(t),$("#TASK_STATUS").html(a),$(".filter_list dd").on("click",function(e){$(this).siblings().removeClass("active"),$(this).addClass("active");var t=$(e.target)[0].dataset.paramcodetype;switch(t){case"MARKET_TYPE":h=$(e.target)[0].dataset.paramcode;break;case"TASK_TYPE":k=$(e.target)[0].dataset.paramcode;break;case"TASK_STATUS":b=$(e.target)[0].dataset.paramcode}})}(),v?(O.style.display="inline-block",f={},$.each(u.SlicenoLDNameJson,function(e,t){var a=t.name;f[a]=[],t.children&&$.each(t.children,function(e,t){f[a].push(t.name)})})):(Y.style.display="inline-block",R());_={},$.each(u.superviseTag,function(e,t){var a=t.paramName;_[a]=[],0==e&&B(a,t.paramCode)}),c.on("click",function(e){$(".detail_info").hasClass("active")&&$(".detail_info").removeClass("active")})}();l.clearLayers(),c.setView([Number(o.lat),Number(o.lon)],N),U()}(e.init)},$(".filterBtn").on("click",function(){$(".custom-mask").addClass("custom-mask--visible"),$(".custom-container").addClass("custom-container--visible"),$(".custom-container li").addClass("active")}),$(".custom-mask").on("click",function(){$(".custom-mask").removeClass("custom-mask--visible"),$(".floating_box").hasClass("active")?($(".floating_box").removeClass("active"),$(".filter_list_box").removeClass("active")):($(".custom-container").removeClass("custom-container--visible"),$(".custom-container li").removeClass("active"))}),$(".custom-container").on("click",function(e){$(".custom-mask").removeClass("custom-mask--visible"),$(".custom-container").removeClass("custom-container--visible"),$(".custom-container li").removeClass("active");var t=$(e.target).data("metter");""==t?$(".filterBtn span").html('不限<i class="icon-arrow"></i>'):$(".filterBtn span").html(t+'<i class="icon-arrow"></i>'),dd.postMessage({type:"distance",val:t})}),$(".floating_box").on("click",function(e){if($(this).addClass("active"),$(".custom-mask").addClass("custom-mask--visible"),$(".filter_list_box").addClass("active"),y){$("#TASK_STATUS dd").removeClass("active");var t=jQuery.makeArray($("#TASK_STATUS dd"));$.each(t,function(e,t){if(t.dataset.paramcode==b)return $(t).addClass("active"),!0})}else $("#TASK_STATUS dd").removeClass("active");if(I.length>0||K.length>0?v?($("#picker-btn").text(P.join("-")),$("#picker-btn").addClass("active"),z&&($("#district-btn").text(z.join("-")),$("#district-btn").addClass("active"))):($("#district-btn").text(z.join("-")),$("#district-btn").addClass("active")):v?($("#picker-btn").text("市|区|县"),$("#picker-btn").removeClass("active"),$("#district-btn").text("商圈/片区"),$("#district-btn").removeClass("active"),$("#district-btn").css("display","none")):($("#district-btn").text("商圈/片区"),$("#district-btn").removeClass("active")),A?($("#tag-btn").text(w),$("#tag-btn").addClass("active")):j?($("#tag-btn").text(M),$("#tag-btn").addClass("active")):($("#tag-btn").text("选择监管类型"),$("#tag-btn").removeClass("active")),C){$("#MARKET_TYPE dd").removeClass("active");t=jQuery.makeArray($("#MARKET_TYPE dd"));$.each(t,function(e,t){if(t.dataset.paramcode==h)return $(t).addClass("active"),!0})}else $("#MARKET_TYPE dd").removeClass("active");if(T){$("#TASK_TYPE dd").removeClass("active");t=jQuery.makeArray($("#TASK_TYPE dd"));$.each(t,function(e,t){if(t.dataset.paramcode==k)return $(t).addClass("active"),!0})}else $("#TASK_TYPE dd").removeClass("active")}),$(".custom-mask").on("touchmove",function(e){e.preventDefault()}),$(".custom-container").on("touchmove",function(e){e.preventDefault()}),$(".iptSearch").on("keydown",function(e){13==e.keyCode&&dd.postMessage({type:"keyword",val:e.target.value||""})}),$(".btn_handler_box li").on("click",function(e){var t=$(e.target).data("filter"),a=$(e.target).data("title");return $(this).closest("li").addClass("active").siblings().removeClass("active"),""==t||"1"==t||"2"==t||"3"==t?($(".check_title").text(a).fadeIn(),void dd.postMessage({type:"checkState",val:t})):"reset"==t?($(".check_title").fadeOut(),l.clearLayers(),c.setView([Number(o.lat),Number(o.lon)],N),r=L.circle([c.getCenter().lat,c.getCenter().lng],{radius:30}),void c.addLayer(r)):void 0}),$(".call_tel").on("click",function(){var e=$(".call_tel").data("tel");dd.postMessage({type:"callPhone",val:e})}),$(".menu_icon_3").on("click",function(){dd.postMessage({type:"openMap",val:d})}),$(".detail").on("click",function(){dd.postMessage({type:"detail",val:m})}),$(".gocheck").on("click",function(){dd.postMessage({type:"gocheck",val:m})}),$(".unfind").on("click",function(){dd.postMessage({type:"unfind",val:m})}),$(".reset_btn").on("click",function(){[],z=[],K=[],P=[],I=[],$("#picker-btn").text("市|区|县"),$("#district-btn").text("商圈/片区"),$("#tag-btn").text("选择监管类型"),$("#tag-btn").removeClass("active"),v?($("#picker-btn").removeClass("active"),$("#district-btn").removeClass("active"),$("#district-btn").css("display","none")):$("#district-btn").removeClass("active"),$(".filter_type dd").removeClass("active"),$(".custom-mask").removeClass("custom-mask--visible"),$(".floating_box").removeClass("active"),$(".filter_list_box").removeClass("active"),y="",C="",T="","",A="",j="";dd.postMessage({type:"businessDistrict",val:{taskStatus:"",businessDistrict:"",legalEntityCata:"",checkType:"",localAdm:"",curMinTagCode:"",curMaxTagCode:""}})}),$(".confirm_btn").on("click",function(){var e={taskStatus:y=b||"",legalEntityCata:C=h||"",checkType:T=k||"",curMinTagCode:A=S||"",curMaxTagCode:j=E||""};1==I.length?(e.localAdm=I[0],e.businessDistrict=""):0==K.length?(e.localAdm=I[0],e.businessDistrict=""):(e.localAdm=K[0],e.businessDistrict=K[1]||""),$(".custom-mask").removeClass("custom-mask--visible"),$(".floating_box").removeClass("active"),$(".filter_list_box").removeClass("active"),dd.postMessage({type:"businessDistrict",val:e})}),O.onclick=function(){new PickerView({bindElem:O,data:f,title:"市|区|县",leftText:"取消",rightText:"确定",rightFn:function(e){var t;P=[],I=[];var a=u.SlicenoLDNameJson.findIndex(function(t){return t.name==e[0]});I.push(u.SlicenoLDNameJson[a].code),P=e;var n=(t=u.SlicenoLDNameJson[a].children).findIndex(function(t){return t.name==e[1]});I.push(t[n].code),O.innerText=P.join("-"),O.setAttribute("class","active"),Y.innerText="商圈/片区",Y.style.display="none",Y.setAttribute("class",""),z=[],K=[],dd.postMessage({type:"showDistrict",val:{localAdm:I[I.length-1],selAll:!1}})}})},Y.onclick=function(){new PickerView({bindElem:Y,data:g,title:"商圈/片区",leftText:"取消",rightText:"确定",rightFn:function(e){var t;z=[],K=[];var a=u.DistrictJson.findIndex(function(t){return t.name==e[0]});if(K.push(u.DistrictJson[a].code),"全部"!=e[1]){z=e;var n=(t=u.DistrictJson[a].children).findIndex(function(t){return t.name==e[1]});K.push(t[n].code)}else z.push(e[0]);Y.innerText=z.join("-"),Y.setAttribute("class","active")}})},J.onclick=function(){new PickerView({bindElem:J,data:_,title:"监管类型",leftText:"取消",rightText:"确定",getAjaxData:!0,ajaxFn:function(e){$.each(u.superviseTag,function(t,a){if(a.paramName==e[0])return _[a.paramName]=[],B(a.paramName,a.paramCode),!1})},rightFn:function(e){$.each(u.superviseTag,function(t,a){if(a.paramName==e[0])return E=a.paramCode,M=a.paramName,!1}),$.each(x,function(t,a){if(a.tagName==e[1])return S=a.tagCode,w=a.tagName,!1}),w?($("#tag-btn").text(w),$("#tag-btn").addClass("active")):($("#tag-btn").text(M),$("#tag-btn").addClass("active"))}})}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,